use std::collections::HashMap;

pub const NN_PIECE_PLANES: usize = 12;  // 6 planes for each side's pieces
pub const NN_AUX_PLANES: usize = 7;   // 1x colour, 1x total move count, 2x P1 castling, 2x P2 castling, 1x fifty move count
pub const NN_MOVE_HISTORY_PER_POS: usize = 8;   // Buffer the last 8 moves and show them to the NN
pub const NN_TOTAL_PIECE_PLANES_PER_POS: usize = NN_MOVE_HISTORY_PER_POS * NN_PIECE_PLANES;
pub const NN_TOTAL_PLANES_PER_POS: usize = NN_TOTAL_PIECE_PLANES_PER_POS + NN_AUX_PLANES;

pub const NN_TOTAL_INPUT_SIZE_PER_POS: usize = NN_TOTAL_PLANES_PER_POS << 6;

pub const TOP_K_OUTPUTS: usize = 8;

// These maps contain a mapping from all valid source/target squares (including special pawn
// underpromotion moves) and uniquely maps them onto a linear space - with 1858 possible total unique
// moves available
lazy_static! {
    pub static ref MOVEMENTS_TO_NN_OUTPUT_INDICES: HashMap<u16, u16> = {
        HashMap::from([(1, 0), (2, 1), (3, 2), (4, 3), (5, 4), (6, 5), (7, 6), (8, 7), (9, 8), (10, 21), (16, 9), (17, 22), (18, 10), (24, 11), (27, 12), (32, 13), (36, 14), (40, 15), (45, 16), (48, 17), (54, 18), (56, 19), (63, 20), (64, 23), (66, 24), (67, 25), (68, 26), (69, 27), (70, 28), (71, 29), (72, 30), (73, 31), (74, 32), (75, 44), (80, 45), (81, 33), (82, 46), (83, 34), (89, 35), (92, 36), (97, 37), (101, 38), (105, 39), (110, 40), (113, 41), (119, 42), (121, 43), (128, 47), (129, 48), (131, 49), (132, 50), (133, 51), (134, 52), (135, 53), (136, 68), (137, 54), (138, 55), (139, 56), (140, 69), (144, 57), (145, 70), (146, 58), (147, 71), (148, 59), (154, 60), (157, 61), (162, 62), (166, 63), (170, 64), (175, 65), (178, 66), (186, 67), (192, 72), (193, 73), (194, 74), (196, 75), (197, 76), (198, 77), (199, 78), (201, 93), (202, 79), (203, 80), (204, 81), (205, 94), (209, 82), (210, 95), (211, 83), (212, 96), (213, 84), (216, 85), (219, 86), (222, 87), (227, 88), (231, 89), (235, 90), (243, 91), (251, 92), (256, 97), (257, 98), (258, 99), (259, 100), (261, 101), (262, 102), (263, 103), (266, 118), (267, 104), (268, 105), (269, 106), (270, 119), (274, 107), (275, 120), (276, 108), (277, 121), (278, 109), (281, 110), (284, 111), (287, 112), (288, 113), (292, 114), (300, 115), (308, 116), (316, 117), (320, 122), (321, 123), (322, 124), (323, 125), (324, 126), (326, 127), (327, 128), (331, 143), (332, 129), (333, 130), (334, 131), (335, 144), (339, 132), (340, 145), (341, 133), (342, 146), (343, 134), (346, 135), (349, 136), (353, 137), (357, 138), (360, 139), (365, 140), (373, 141), (381, 142), (384, 147), (385, 148), (386, 149), (387, 150), (388, 151), (389, 152), (391, 153), (396, 168), (397, 154), (398, 155), (399, 156), (404, 157), (405, 169), (406, 158), (407, 170), (411, 159), (414, 160), (418, 161), (422, 162), (425, 163), (430, 164), (432, 165), (438, 166), (446, 167), (448, 171), (449, 172), (450, 173), (451, 174), (452, 175), (453, 176), (454, 177), (461, 192), (462, 178), (463, 179), (469, 180), (470, 193), (471, 181), (476, 182), (479, 183), (483, 184), (487, 185), (490, 186), (495, 187), (497, 188), (503, 189), (504, 190), (511, 191), (512, 194), (513, 195), (514, 215), (521, 196), (522, 197), (523, 198), (524, 199), (525, 200), (526, 201), (527, 202), (528, 203), (529, 204), (530, 216), (536, 205), (537, 217), (538, 206), (544, 207), (547, 208), (552, 209), (556, 210), (560, 211), (565, 212), (568, 213), (574, 214), (576, 218), (577, 219), (578, 220), (579, 241), (584, 221), (586, 222), (587, 223), (588, 224), (589, 225), (590, 226), (591, 227), (592, 228), (593, 229), (594, 230), (595, 242), (600, 243), (601, 231), (602, 244), (603, 232), (609, 233), (612, 234), (617, 235), (621, 236), (625, 237), (630, 238), (633, 239), (639, 240), (640, 268), (641, 245), (642, 246), (643, 247), (644, 269), (648, 248), (649, 249), (651, 250), (652, 251), (653, 252), (654, 253), (655, 254), (656, 270), (657, 255), (658, 256), (659, 257), (660, 271), (664, 258), (665, 272), (666, 259), (667, 273), (668, 260), (674, 261), (677, 262), (682, 263), (686, 264), (690, 265), (695, 266), (698, 267), (705, 297), (706, 274), (707, 275), (708, 276), (709, 298), (712, 277), (713, 278), (714, 279), (716, 280), (717, 281), (718, 282), (719, 283), (721, 299), (722, 284), (723, 285), (724, 286), (725, 300), (729, 287), (730, 301), (731, 288), (732, 302), (733, 289), (736, 290), (739, 291), (742, 292), (747, 293), (751, 294), (755, 295), (763, 296), (770, 326), (771, 303), (772, 304), (773, 305), (774, 327), (776, 306), (777, 307), (778, 308), (779, 309), (781, 310), (782, 311), (783, 312), (786, 328), (787, 313), (788, 314), (789, 315), (790, 329), (794, 316), (795, 330), (796, 317), (797, 331), (798, 318), (801, 319), (804, 320), (807, 321), (808, 322), (812, 323), (820, 324), (828, 325), (835, 355), (836, 332), (837, 333), (838, 334), (839, 356), (840, 335), (841, 336), (842, 337), (843, 338), (844, 339), (846, 340), (847, 341), (851, 357), (852, 342), (853, 343), (854, 344), (855, 358), (859, 345), (860, 359), (861, 346), (862, 360), (863, 347), (866, 348), (869, 349), (873, 350), (877, 351), (880, 352), (885, 353), (893, 354), (900, 384), (901, 361), (902, 362), (903, 363), (904, 364), (905, 365), (906, 366), (907, 367), (908, 368), (909, 369), (911, 370), (916, 385), (917, 371), (918, 372), (919, 373), (924, 374), (925, 386), (926, 375), (927, 387), (931, 376), (934, 377), (938, 378), (942, 379), (945, 380), (950, 381), (952, 382), (958, 383), (965, 409), (966, 388), (967, 389), (968, 390), (969, 391), (970, 392), (971, 393), (972, 394), (973, 395), (974, 396), (981, 410), (982, 397), (983, 398), (989, 399), (990, 411), (991, 400), (996, 401), (999, 402), (1003, 403), (1007, 404), (1010, 405), (1015, 406), (1017, 407), (1023, 408), (1024, 412), (1025, 433), (1026, 413), (1032, 414), (1033, 415), (1034, 434), (1041, 416), (1042, 417), (1043, 418), (1044, 419), (1045, 420), (1046, 421), (1047, 422), (1048, 423), (1049, 424), (1050, 435), (1056, 425), (1057, 436), (1058, 426), (1064, 427), (1067, 428), (1072, 429), (1076, 430), (1080, 431), (1085, 432), (1088, 460), (1089, 437), (1090, 461), (1091, 438), (1096, 439), (1097, 440), (1098, 441), (1099, 462), (1104, 442), (1106, 443), (1107, 444), (1108, 445), (1109, 446), (1110, 447), (1111, 448), (1112, 449), (1113, 450), (1114, 451), (1115, 463), (1120, 464), (1121, 452), (1122, 465), (1123, 453), (1129, 454), (1132, 455), (1137, 456), (1141, 457), (1145, 458), (1150, 459), (1152, 466), (1153, 491), (1154, 467), (1155, 492), (1156, 468), (1160, 493), (1161, 469), (1162, 470), (1163, 471), (1164, 494), (1168, 472), (1169, 473), (1171, 474), (1172, 475), (1173, 476), (1174, 477), (1175, 478), (1176, 495), (1177, 479), (1178, 480), (1179, 481), (1180, 496), (1184, 482), (1185, 497), (1186, 483), (1187, 498), (1188, 484), (1194, 485), (1197, 486), (1202, 487), (1206, 488), (1210, 489), (1215, 490), (1217, 499), (1218, 524), (1219, 500), (1220, 525), (1221, 501), (1225, 526), (1226, 502), (1227, 503), (1228, 504), (1229, 527), (1232, 505), (1233, 506), (1234, 507), (1236, 508), (1237, 509), (1238, 510), (1239, 511), (1241, 528), (1242, 512), (1243, 513), (1244, 514), (1245, 529), (1249, 515), (1250, 530), (1251, 516), (1252, 531), (1253, 517), (1256, 518), (1259, 519), (1262, 520), (1267, 521), (1271, 522), (1275, 523), (1282, 532), (1283, 557), (1284, 533), (1285, 558), (1286, 534), (1290, 559), (1291, 535), (1292, 536), (1293, 537), (1294, 560), (1296, 538), (1297, 539), (1298, 540), (1299, 541), (1301, 542), (1302, 543), (1303, 544), (1306, 561), (1307, 545), (1308, 546), (1309, 547), (1310, 562), (1314, 548), (1315, 563), (1316, 549), (1317, 564), (1318, 550), (1321, 551), (1324, 552), (1327, 553), (1328, 554), (1332, 555), (1340, 556), (1347, 565), (1348, 590), (1349, 566), (1350, 591), (1351, 567), (1355, 592), (1356, 568), (1357, 569), (1358, 570), (1359, 593), (1360, 571), (1361, 572), (1362, 573), (1363, 574), (1364, 575), (1366, 576), (1367, 577), (1371, 594), (1372, 578), (1373, 579), (1374, 580), (1375, 595), (1379, 581), (1380, 596), (1381, 582), (1382, 597), (1383, 583), (1386, 584), (1389, 585), (1393, 586), (1397, 587), (1400, 588), (1405, 589), (1412, 598), (1413, 621), (1414, 599), (1415, 622), (1420, 623), (1421, 600), (1422, 601), (1423, 602), (1424, 603), (1425, 604), (1426, 605), (1427, 606), (1428, 607), (1429, 608), (1431, 609), (1436, 624), (1437, 610), (1438, 611), (1439, 612), (1444, 613), (1445, 625), (1446, 614), (1447, 626), (1451, 615), (1454, 616), (1458, 617), (1462, 618), (1465, 619), (1470, 620), (1477, 627), (1478, 648), (1479, 628), (1485, 649), (1486, 629), (1487, 630), (1488, 631), (1489, 632), (1490, 633), (1491, 634), (1492, 635), (1493, 636), (1494, 637), (1501, 650), (1502, 638), (1503, 639), (1509, 640), (1510, 651), (1511, 641), (1516, 642), (1519, 643), (1523, 644), (1527, 645), (1530, 646), (1535, 647), (1536, 652), (1539, 653), (1544, 654), (1545, 673), (1546, 655), (1552, 656), (1553, 657), (1554, 674), (1561, 658), (1562, 659), (1563, 660), (1564, 661), (1565, 662), (1566, 663), (1567, 664), (1568, 665), (1569, 666), (1570, 675), (1576, 667), (1577, 676), (1578, 668), (1584, 669), (1587, 670), (1592, 671), (1596, 672), (1601, 677), (1604, 678), (1608, 700), (1609, 679), (1610, 701), (1611, 680), (1616, 681), (1617, 682), (1618, 683), (1619, 702), (1624, 684), (1626, 685), (1627, 686), (1628, 687), (1629, 688), (1630, 689), (1631, 690), (1632, 691), (1633, 692), (1634, 693), (1635, 703), (1640, 704), (1641, 694), (1642, 705), (1643, 695), (1649, 696), (1652, 697), (1657, 698), (1661, 699), (1666, 706), (1669, 707), (1672, 708), (1673, 731), (1674, 709), (1675, 732), (1676, 710), (1680, 733), (1681, 711), (1682, 712), (1683, 713), (1684, 734), (1688, 714), (1689, 715), (1691, 716), (1692, 717), (1693, 718), (1694, 719), (1695, 720), (1696, 735), (1697, 721), (1698, 722), (1699, 723), (1700, 736), (1704, 724), (1705, 737), (1706, 725), (1707, 738), (1708, 726), (1714, 727), (1717, 728), (1722, 729), (1726, 730), (1728, 739), (1731, 740), (1734, 741), (1737, 742), (1738, 766), (1739, 743), (1740, 767), (1741, 744), (1745, 768), (1746, 745), (1747, 746), (1748, 747), (1749, 769), (1752, 748), (1753, 749), (1754, 750), (1756, 751), (1757, 752), (1758, 753), (1759, 754), (1761, 770), (1762, 755), (1763, 756), (1764, 757), (1765, 771), (1769, 758), (1770, 772), (1771, 759), (1772, 773), (1773, 760), (1776, 761), (1779, 762), (1782, 763), (1787, 764), (1791, 765), (1793, 774), (1796, 775), (1799, 776), (1802, 777), (1803, 801), (1804, 778), (1805, 802), (1806, 779), (1810, 803), (1811, 780), (1812, 781), (1813, 782), (1814, 804), (1816, 783), (1817, 784), (1818, 785), (1819, 786), (1821, 787), (1822, 788), (1823, 789), (1826, 805), (1827, 790), (1828, 791), (1829, 792), (1830, 806), (1834, 793), (1835, 807), (1836, 794), (1837, 808), (1838, 795), (1841, 796), (1844, 797), (1847, 798), (1848, 799), (1852, 800), (1858, 809), (1861, 810), (1867, 811), (1868, 834), (1869, 812), (1870, 835), (1871, 813), (1875, 836), (1876, 814), (1877, 815), (1878, 816), (1879, 837), (1880, 817), (1881, 818), (1882, 819), (1883, 820), (1884, 821), (1886, 822), (1887, 823), (1891, 838), (1892, 824), (1893, 825), (1894, 826), (1895, 839), (1899, 827), (1900, 840), (1901, 828), (1902, 841), (1903, 829), (1906, 830), (1909, 831), (1913, 832), (1917, 833), (1923, 842), (1926, 843), (1932, 844), (1933, 865), (1934, 845), (1935, 866), (1940, 867), (1941, 846), (1942, 847), (1943, 848), (1944, 849), (1945, 850), (1946, 851), (1947, 852), (1948, 853), (1949, 854), (1951, 855), (1956, 868), (1957, 856), (1958, 857), (1959, 858), (1964, 859), (1965, 869), (1966, 860), (1967, 870), (1971, 861), (1974, 862), (1978, 863), (1982, 864), (1988, 871), (1991, 872), (1997, 873), (1998, 892), (1999, 874), (2005, 893), (2006, 875), (2007, 876), (2008, 877), (2009, 878), (2010, 879), (2011, 880), (2012, 881), (2013, 882), (2014, 883), (2021, 894), (2022, 884), (2023, 885), (2029, 886), (2030, 895), (2031, 887), (2036, 888), (2039, 889), (2043, 890), (2047, 891), (2048, 896), (2052, 897), (2056, 898), (2059, 899), (2064, 900), (2065, 917), (2066, 901), (2072, 902), (2073, 903), (2074, 918), (2081, 904), (2082, 905), (2083, 906), (2084, 907), (2085, 908), (2086, 909), (2087, 910), (2088, 911), (2089, 912), (2090, 919), (2096, 913), (2097, 920), (2098, 914), (2104, 915), (2107, 916), (2113, 921), (2117, 922), (2121, 923), (2124, 924), (2128, 944), (2129, 925), (2130, 945), (2131, 926), (2136, 927), (2137, 928), (2138, 929), (2139, 946), (2144, 930), (2146, 931), (2147, 932), (2148, 933), (2149, 934), (2150, 935), (2151, 936), (2152, 937), (2153, 938), (2154, 939), (2155, 947), (2160, 948), (2161, 940), (2162, 949), (2163, 941), (2169, 942), (2172, 943), (2178, 950), (2182, 951), (2186, 952), (2189, 953), (2192, 954), (2193, 975), (2194, 955), (2195, 976), (2196, 956), (2200, 977), (2201, 957), (2202, 958), (2203, 959), (2204, 978), (2208, 960), (2209, 961), (2211, 962), (2212, 963), (2213, 964), (2214, 965), (2215, 966), (2216, 979), (2217, 967), (2218, 968), (2219, 969), (2220, 980), (2224, 970), (2225, 981), (2226, 971), (2227, 982), (2228, 972), (2234, 973), (2237, 974), (2243, 983), (2247, 984), (2248, 985), (2251, 986), (2254, 987), (2257, 988), (2258, 1010), (2259, 989), (2260, 1011), (2261, 990), (2265, 1012), (2266, 991), (2267, 992), (2268, 993), (2269, 1013), (2272, 994), (2273, 995), (2274, 996), (2276, 997), (2277, 998), (2278, 999), (2279, 1000), (2281, 1014), (2282, 1001), (2283, 1002), (2284, 1003), (2285, 1015), (2289, 1004), (2290, 1016), (2291, 1005), (2292, 1017), (2293, 1006), (2296, 1007), (2299, 1008), (2302, 1009), (2304, 1018), (2308, 1019), (2313, 1020), (2316, 1021), (2319, 1022), (2322, 1023), (2323, 1045), (2324, 1024), (2325, 1046), (2326, 1025), (2330, 1047), (2331, 1026), (2332, 1027), (2333, 1028), (2334, 1048), (2336, 1029), (2337, 1030), (2338, 1031), (2339, 1032), (2341, 1033), (2342, 1034), (2343, 1035), (2346, 1049), (2347, 1036), (2348, 1037), (2349, 1038), (2350, 1050), (2354, 1039), (2355, 1051), (2356, 1040), (2357, 1052), (2358, 1041), (2361, 1042), (2364, 1043), (2367, 1044), (2369, 1053), (2373, 1054), (2378, 1055), (2381, 1056), (2387, 1057), (2388, 1078), (2389, 1058), (2390, 1079), (2391, 1059), (2395, 1080), (2396, 1060), (2397, 1061), (2398, 1062), (2399, 1081), (2400, 1063), (2401, 1064), (2402, 1065), (2403, 1066), (2404, 1067), (2406, 1068), (2407, 1069), (2411, 1082), (2412, 1070), (2413, 1071), (2414, 1072), (2415, 1083), (2419, 1073), (2420, 1084), (2421, 1074), (2422, 1085), (2423, 1075), (2426, 1076), (2429, 1077), (2434, 1086), (2438, 1087), (2443, 1088), (2446, 1089), (2452, 1090), (2453, 1109), (2454, 1091), (2455, 1110), (2460, 1111), (2461, 1092), (2462, 1093), (2463, 1094), (2464, 1095), (2465, 1096), (2466, 1097), (2467, 1098), (2468, 1099), (2469, 1100), (2471, 1101), (2476, 1112), (2477, 1102), (2478, 1103), (2479, 1104), (2484, 1105), (2485, 1113), (2486, 1106), (2487, 1114), (2491, 1107), (2494, 1108), (2499, 1115), (2503, 1116), (2508, 1117), (2511, 1118), (2517, 1119), (2518, 1136), (2519, 1120), (2525, 1137), (2526, 1121), (2527, 1122), (2528, 1123), (2529, 1124), (2530, 1125), (2531, 1126), (2532, 1127), (2533, 1128), (2534, 1129), (2541, 1138), (2542, 1130), (2543, 1131), (2549, 1132), (2550, 1139), (2551, 1133), (2556, 1134), (2559, 1135), (2560, 1140), (2565, 1141), (2568, 1142), (2572, 1143), (2576, 1144), (2579, 1145), (2584, 1146), (2585, 1161), (2586, 1147), (2592, 1148), (2593, 1149), (2594, 1162), (2601, 1150), (2602, 1151), (2603, 1152), (2604, 1153), (2605, 1154), (2606, 1155), (2607, 1156), (2608, 1157), (2609, 1158), (2610, 1163), (2616, 1159), (2617, 1164), (2618, 1160), (2625, 1165), (2630, 1166), (2633, 1167), (2637, 1168), (2641, 1169), (2644, 1170), (2648, 1188), (2649, 1171), (2650, 1189), (2651, 1172), (2656, 1173), (2657, 1174), (2658, 1175), (2659, 1190), (2664, 1176), (2666, 1177), (2667, 1178), (2668, 1179), (2669, 1180), (2670, 1181), (2671, 1182), (2672, 1183), (2673, 1184), (2674, 1185), (2675, 1191), (2680, 1192), (2681, 1186), (2682, 1193), (2683, 1187), (2690, 1194), (2695, 1195), (2698, 1196), (2702, 1197), (2706, 1198), (2709, 1199), (2712, 1200), (2713, 1219), (2714, 1201), (2715, 1220), (2716, 1202), (2720, 1221), (2721, 1203), (2722, 1204), (2723, 1205), (2724, 1222), (2728, 1206), (2729, 1207), (2731, 1208), (2732, 1209), (2733, 1210), (2734, 1211), (2735, 1212), (2736, 1223), (2737, 1213), (2738, 1214), (2739, 1215), (2740, 1224), (2744, 1216), (2745, 1225), (2746, 1217), (2747, 1226), (2748, 1218), (2755, 1227), (2763, 1228), (2767, 1229), (2768, 1230), (2771, 1231), (2774, 1232), (2777, 1233), (2778, 1252), (2779, 1234), (2780, 1253), (2781, 1235), (2785, 1254), (2786, 1236), (2787, 1237), (2788, 1238), (2789, 1255), (2792, 1239), (2793, 1240), (2794, 1241), (2796, 1242), (2797, 1243), (2798, 1244), (2799, 1245), (2801, 1256), (2802, 1246), (2803, 1247), (2804, 1248), (2805, 1257), (2809, 1249), (2810, 1258), (2811, 1250), (2812, 1259), (2813, 1251), (2820, 1260), (2824, 1261), (2828, 1262), (2833, 1263), (2836, 1264), (2839, 1265), (2842, 1266), (2843, 1285), (2844, 1267), (2845, 1286), (2846, 1268), (2850, 1287), (2851, 1269), (2852, 1270), (2853, 1271), (2854, 1288), (2856, 1272), (2857, 1273), (2858, 1274), (2859, 1275), (2861, 1276), (2862, 1277), (2863, 1278), (2866, 1289), (2867, 1279), (2868, 1280), (2869, 1281), (2870, 1290), (2874, 1282), (2875, 1291), (2876, 1283), (2877, 1292), (2878, 1284), (2880, 1293), (2885, 1294), (2889, 1295), (2893, 1296), (2898, 1297), (2901, 1298), (2907, 1299), (2908, 1318), (2909, 1300), (2910, 1319), (2911, 1301), (2915, 1320), (2916, 1302), (2917, 1303), (2918, 1304), (2919, 1321), (2920, 1305), (2921, 1306), (2922, 1307), (2923, 1308), (2924, 1309), (2926, 1310), (2927, 1311), (2931, 1322), (2932, 1312), (2933, 1313), (2934, 1314), (2935, 1323), (2939, 1315), (2940, 1324), (2941, 1316), (2942, 1325), (2943, 1317), (2945, 1326), (2950, 1327), (2954, 1328), (2958, 1329), (2963, 1330), (2966, 1331), (2972, 1332), (2973, 1349), (2974, 1333), (2975, 1350), (2980, 1351), (2981, 1334), (2982, 1335), (2983, 1336), (2984, 1337), (2985, 1338), (2986, 1339), (2987, 1340), (2988, 1341), (2989, 1342), (2991, 1343), (2996, 1352), (2997, 1344), (2998, 1345), (2999, 1346), (3004, 1347), (3005, 1353), (3006, 1348), (3007, 1354), (3010, 1355), (3015, 1356), (3019, 1357), (3023, 1358), (3028, 1359), (3031, 1360), (3037, 1361), (3038, 1376), (3039, 1362), (3045, 1377), (3046, 1363), (3047, 1364), (3048, 1365), (3049, 1366), (3050, 1367), (3051, 1368), (3052, 1369), (3053, 1370), (3054, 1371), (3061, 1378), (3062, 1372), (3063, 1373), (3069, 1374), (3070, 1379), (3071, 1375), (3072, 1380), (3078, 1381), (3080, 1382), (3085, 1383), (3088, 1384), (3092, 1385), (3096, 1386), (3099, 1387), (3104, 1388), (3105, 1407), (3106, 1389), (3112, 1390), (3113, 1391), (3114, 1408), (3121, 1392), (3122, 1393), (3123, 1394), (3124, 1395), (3125, 1396), (3126, 1397), (3127, 1398), (3128, 1399), (3129, 1403), (3130, 1409), (3137, 1410), (3143, 1411), (3145, 1412), (3150, 1413), (3153, 1414), (3157, 1415), (3161, 1416), (3164, 1417), (3168, 1442), (3169, 1418), (3170, 1443), (3171, 1419), (3176, 1420), (3177, 1421), (3178, 1422), (3179, 1444), (3184, 1423), (3186, 1424), (3187, 1425), (3188, 1426), (3189, 1427), (3190, 1428), (3191, 1429), (3192, 1430), (3193, 1434), (3194, 1438), (3195, 1445), (3202, 1446), (3210, 1447), (3215, 1448), (3218, 1449), (3222, 1450), (3226, 1451), (3229, 1452), (3232, 1453), (3233, 1478), (3234, 1454), (3235, 1479), (3236, 1455), (3240, 1480), (3241, 1456), (3242, 1457), (3243, 1458), (3244, 1481), (3248, 1459), (3249, 1460), (3251, 1461), (3252, 1462), (3253, 1463), (3254, 1464), (3255, 1465), (3256, 1482), (3257, 1466), (3258, 1470), (3259, 1474), (3260, 1483), (3267, 1484), (3275, 1485), (3283, 1486), (3287, 1487), (3288, 1488), (3291, 1489), (3294, 1490), (3297, 1491), (3298, 1516), (3299, 1492), (3300, 1517), (3301, 1493), (3305, 1518), (3306, 1494), (3307, 1495), (3308, 1496), (3309, 1519), (3312, 1497), (3313, 1498), (3314, 1499), (3316, 1500), (3317, 1501), (3318, 1502), (3319, 1503), (3321, 1520), (3322, 1504), (3323, 1508), (3324, 1512), (3325, 1521), (3332, 1522), (3340, 1523), (3344, 1524), (3348, 1525), (3353, 1526), (3356, 1527), (3359, 1528), (3362, 1529), (3363, 1554), (3364, 1530), (3365, 1555), (3366, 1531), (3370, 1556), (3371, 1532), (3372, 1533), (3373, 1534), (3374, 1557), (3376, 1535), (3377, 1536), (3378, 1537), (3379, 1538), (3381, 1539), (3382, 1540), (3383, 1541), (3386, 1558), (3387, 1542), (3388, 1546), (3389, 1550), (3390, 1559), (3397, 1560), (3400, 1561), (3405, 1562), (3409, 1563), (3413, 1564), (3418, 1565), (3421, 1566), (3427, 1567), (3428, 1592), (3429, 1568), (3430, 1593), (3431, 1569), (3435, 1594), (3436, 1570), (3437, 1571), (3438, 1572), (3439, 1595), (3440, 1573), (3441, 1574), (3442, 1575), (3443, 1576), (3444, 1577), (3446, 1578), (3447, 1579), (3451, 1596), (3452, 1580), (3453, 1584), (3454, 1588), (3455, 1597), (3456, 1598), (3462, 1599), (3465, 1600), (3470, 1601), (3474, 1602), (3478, 1603), (3483, 1604), (3486, 1605), (3492, 1606), (3493, 1630), (3494, 1607), (3495, 1631), (3500, 1632), (3501, 1608), (3502, 1609), (3503, 1610), (3504, 1611), (3505, 1612), (3506, 1613), (3507, 1614), (3508, 1615), (3509, 1616), (3511, 1617), (3516, 1633), (3517, 1618), (3518, 1622), (3519, 1626), (3521, 1634), (3527, 1635), (3530, 1636), (3535, 1637), (3539, 1638), (3543, 1639), (3548, 1640), (3551, 1641), (3557, 1642), (3558, 1661), (3559, 1643), (3565, 1662), (3566, 1644), (3567, 1645), (3568, 1646), (3569, 1647), (3570, 1648), (3571, 1649), (3572, 1650), (3573, 1651), (3574, 1652), (3581, 1663), (3582, 1653), (3583, 1657), (3584, 1664), (3591, 1665), (3592, 1666), (3598, 1667), (3600, 1668), (3605, 1669), (3608, 1670), (3612, 1671), (3616, 1672), (3619, 1673), (3624, 1674), (3625, 1685), (3626, 1675), (3632, 1676), (3633, 1677), (3634, 1686), (3641, 1678), (3642, 1679), (3643, 1680), (3644, 1681), (3645, 1682), (3646, 1683), (3647, 1684), (3649, 1687), (3657, 1688), (3663, 1689), (3665, 1690), (3670, 1691), (3673, 1692), (3677, 1693), (3681, 1694), (3684, 1695), (3688, 1708), (3689, 1696), (3690, 1709), (3691, 1697), (3696, 1698), (3697, 1699), (3698, 1700), (3699, 1710), (3704, 1701), (3706, 1702), (3707, 1703), (3708, 1704), (3709, 1705), (3710, 1706), (3711, 1707), (3714, 1711), (3722, 1712), (3730, 1713), (3735, 1714), (3738, 1715), (3742, 1716), (3746, 1717), (3749, 1718), (3752, 1719), (3753, 1732), (3754, 1720), (3755, 1733), (3756, 1721), (3760, 1734), (3761, 1722), (3762, 1723), (3763, 1724), (3764, 1735), (3768, 1725), (3769, 1726), (3771, 1727), (3772, 1728), (3773, 1729), (3774, 1730), (3775, 1731), (3779, 1736), (3787, 1737), (3795, 1738), (3803, 1739), (3807, 1740), (3808, 1741), (3811, 1742), (3814, 1743), (3817, 1744), (3818, 1757), (3819, 1745), (3820, 1758), (3821, 1746), (3825, 1759), (3826, 1747), (3827, 1748), (3828, 1749), (3829, 1760), (3832, 1750), (3833, 1751), (3834, 1752), (3836, 1753), (3837, 1754), (3838, 1755), (3839, 1756), (3844, 1761), (3852, 1762), (3860, 1763), (3864, 1764), (3868, 1765), (3873, 1766), (3876, 1767), (3879, 1768), (3882, 1769), (3883, 1782), (3884, 1770), (3885, 1783), (3886, 1771), (3890, 1784), (3891, 1772), (3892, 1773), (3893, 1774), (3894, 1785), (3896, 1775), (3897, 1776), (3898, 1777), (3899, 1778), (3901, 1779), (3902, 1780), (3903, 1781), (3909, 1786), (3917, 1787), (3920, 1788), (3925, 1789), (3929, 1790), (3933, 1791), (3938, 1792), (3941, 1793), (3947, 1794), (3948, 1807), (3949, 1795), (3950, 1808), (3951, 1796), (3955, 1809), (3956, 1797), (3957, 1798), (3958, 1799), (3959, 1810), (3960, 1800), (3961, 1801), (3962, 1802), (3963, 1803), (3964, 1804), (3966, 1805), (3967, 1806), (3974, 1811), (3976, 1812), (3982, 1813), (3985, 1814), (3990, 1815), (3994, 1816), (3998, 1817), (4003, 1818), (4006, 1819), (4012, 1820), (4013, 1832), (4014, 1821), (4015, 1833), (4020, 1834), (4021, 1822), (4022, 1823), (4023, 1824), (4024, 1825), (4025, 1826), (4026, 1827), (4027, 1828), (4028, 1829), (4029, 1830), (4031, 1831), (4032, 1835), (4039, 1836), (4041, 1837), (4047, 1838), (4050, 1839), (4055, 1840), (4059, 1841), (4063, 1842), (4068, 1843), (4071, 1844), (4077, 1845), (4078, 1856), (4079, 1846), (4085, 1857), (4086, 1847), (4087, 1848), (4088, 1849), (4089, 1850), (4090, 1851), (4091, 1852), (4092, 1853), (4093, 1854), (4094, 1855), (7224, 1400), (7225, 1404), (7288, 1431), (7289, 1435), (7290, 1439), (7353, 1467), (7354, 1471), (7355, 1475), (7418, 1505), (7419, 1509), (7420, 1513), (7483, 1543), (7484, 1547), (7485, 1551), (7548, 1581), (7549, 1585), (7550, 1589), (7613, 1619), (7614, 1623), (7615, 1627), (7678, 1654), (7679, 1658), (11320, 1401), (11321, 1405), (11384, 1432), (11385, 1436), (11386, 1440), (11449, 1468), (11450, 1472), (11451, 1476), (11514, 1506), (11515, 1510), (11516, 1514), (11579, 1544), (11580, 1548), (11581, 1552), (11644, 1582), (11645, 1586), (11646, 1590), (11709, 1620), (11710, 1624), (11711, 1628), (11774, 1655), (11775, 1659), (15416, 1402), (15417, 1406), (15480, 1433), (15481, 1437), (15482, 1441), (15545, 1469), (15546, 1473), (15547, 1477), (15610, 1507), (15611, 1511), (15612, 1515), (15675, 1545), (15676, 1549), (15677, 1553), (15740, 1583), (15741, 1587), (15742, 1591), (15805, 1621), (15806, 1625), (15807, 1629), (15870, 1656), (15871, 1660)])
    };

    pub static ref NN_OUTPUT_INDICES_TO_MOVEMENTS: HashMap<u16, u16> = {
        HashMap::from([(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (21, 10), (9, 16), (22, 17), (10, 18), (11, 24), (12, 27), (13, 32), (14, 36), (15, 40), (16, 45), (17, 48), (18, 54), (19, 56), (20, 63), (23, 64), (24, 66), (25, 67), (26, 68), (27, 69), (28, 70), (29, 71), (30, 72), (31, 73), (32, 74), (44, 75), (45, 80), (33, 81), (46, 82), (34, 83), (35, 89), (36, 92), (37, 97), (38, 101), (39, 105), (40, 110), (41, 113), (42, 119), (43, 121), (47, 128), (48, 129), (49, 131), (50, 132), (51, 133), (52, 134), (53, 135), (68, 136), (54, 137), (55, 138), (56, 139), (69, 140), (57, 144), (70, 145), (58, 146), (71, 147), (59, 148), (60, 154), (61, 157), (62, 162), (63, 166), (64, 170), (65, 175), (66, 178), (67, 186), (72, 192), (73, 193), (74, 194), (75, 196), (76, 197), (77, 198), (78, 199), (93, 201), (79, 202), (80, 203), (81, 204), (94, 205), (82, 209), (95, 210), (83, 211), (96, 212), (84, 213), (85, 216), (86, 219), (87, 222), (88, 227), (89, 231), (90, 235), (91, 243), (92, 251), (97, 256), (98, 257), (99, 258), (100, 259), (101, 261), (102, 262), (103, 263), (118, 266), (104, 267), (105, 268), (106, 269), (119, 270), (107, 274), (120, 275), (108, 276), (121, 277), (109, 278), (110, 281), (111, 284), (112, 287), (113, 288), (114, 292), (115, 300), (116, 308), (117, 316), (122, 320), (123, 321), (124, 322), (125, 323), (126, 324), (127, 326), (128, 327), (143, 331), (129, 332), (130, 333), (131, 334), (144, 335), (132, 339), (145, 340), (133, 341), (146, 342), (134, 343), (135, 346), (136, 349), (137, 353), (138, 357), (139, 360), (140, 365), (141, 373), (142, 381), (147, 384), (148, 385), (149, 386), (150, 387), (151, 388), (152, 389), (153, 391), (168, 396), (154, 397), (155, 398), (156, 399), (157, 404), (169, 405), (158, 406), (170, 407), (159, 411), (160, 414), (161, 418), (162, 422), (163, 425), (164, 430), (165, 432), (166, 438), (167, 446), (171, 448), (172, 449), (173, 450), (174, 451), (175, 452), (176, 453), (177, 454), (192, 461), (178, 462), (179, 463), (180, 469), (193, 470), (181, 471), (182, 476), (183, 479), (184, 483), (185, 487), (186, 490), (187, 495), (188, 497), (189, 503), (190, 504), (191, 511), (194, 512), (195, 513), (215, 514), (196, 521), (197, 522), (198, 523), (199, 524), (200, 525), (201, 526), (202, 527), (203, 528), (204, 529), (216, 530), (205, 536), (217, 537), (206, 538), (207, 544), (208, 547), (209, 552), (210, 556), (211, 560), (212, 565), (213, 568), (214, 574), (218, 576), (219, 577), (220, 578), (241, 579), (221, 584), (222, 586), (223, 587), (224, 588), (225, 589), (226, 590), (227, 591), (228, 592), (229, 593), (230, 594), (242, 595), (243, 600), (231, 601), (244, 602), (232, 603), (233, 609), (234, 612), (235, 617), (236, 621), (237, 625), (238, 630), (239, 633), (240, 639), (268, 640), (245, 641), (246, 642), (247, 643), (269, 644), (248, 648), (249, 649), (250, 651), (251, 652), (252, 653), (253, 654), (254, 655), (270, 656), (255, 657), (256, 658), (257, 659), (271, 660), (258, 664), (272, 665), (259, 666), (273, 667), (260, 668), (261, 674), (262, 677), (263, 682), (264, 686), (265, 690), (266, 695), (267, 698), (297, 705), (274, 706), (275, 707), (276, 708), (298, 709), (277, 712), (278, 713), (279, 714), (280, 716), (281, 717), (282, 718), (283, 719), (299, 721), (284, 722), (285, 723), (286, 724), (300, 725), (287, 729), (301, 730), (288, 731), (302, 732), (289, 733), (290, 736), (291, 739), (292, 742), (293, 747), (294, 751), (295, 755), (296, 763), (326, 770), (303, 771), (304, 772), (305, 773), (327, 774), (306, 776), (307, 777), (308, 778), (309, 779), (310, 781), (311, 782), (312, 783), (328, 786), (313, 787), (314, 788), (315, 789), (329, 790), (316, 794), (330, 795), (317, 796), (331, 797), (318, 798), (319, 801), (320, 804), (321, 807), (322, 808), (323, 812), (324, 820), (325, 828), (355, 835), (332, 836), (333, 837), (334, 838), (356, 839), (335, 840), (336, 841), (337, 842), (338, 843), (339, 844), (340, 846), (341, 847), (357, 851), (342, 852), (343, 853), (344, 854), (358, 855), (345, 859), (359, 860), (346, 861), (360, 862), (347, 863), (348, 866), (349, 869), (350, 873), (351, 877), (352, 880), (353, 885), (354, 893), (384, 900), (361, 901), (362, 902), (363, 903), (364, 904), (365, 905), (366, 906), (367, 907), (368, 908), (369, 909), (370, 911), (385, 916), (371, 917), (372, 918), (373, 919), (374, 924), (386, 925), (375, 926), (387, 927), (376, 931), (377, 934), (378, 938), (379, 942), (380, 945), (381, 950), (382, 952), (383, 958), (409, 965), (388, 966), (389, 967), (390, 968), (391, 969), (392, 970), (393, 971), (394, 972), (395, 973), (396, 974), (410, 981), (397, 982), (398, 983), (399, 989), (411, 990), (400, 991), (401, 996), (402, 999), (403, 1003), (404, 1007), (405, 1010), (406, 1015), (407, 1017), (408, 1023), (412, 1024), (433, 1025), (413, 1026), (414, 1032), (415, 1033), (434, 1034), (416, 1041), (417, 1042), (418, 1043), (419, 1044), (420, 1045), (421, 1046), (422, 1047), (423, 1048), (424, 1049), (435, 1050), (425, 1056), (436, 1057), (426, 1058), (427, 1064), (428, 1067), (429, 1072), (430, 1076), (431, 1080), (432, 1085), (460, 1088), (437, 1089), (461, 1090), (438, 1091), (439, 1096), (440, 1097), (441, 1098), (462, 1099), (442, 1104), (443, 1106), (444, 1107), (445, 1108), (446, 1109), (447, 1110), (448, 1111), (449, 1112), (450, 1113), (451, 1114), (463, 1115), (464, 1120), (452, 1121), (465, 1122), (453, 1123), (454, 1129), (455, 1132), (456, 1137), (457, 1141), (458, 1145), (459, 1150), (466, 1152), (491, 1153), (467, 1154), (492, 1155), (468, 1156), (493, 1160), (469, 1161), (470, 1162), (471, 1163), (494, 1164), (472, 1168), (473, 1169), (474, 1171), (475, 1172), (476, 1173), (477, 1174), (478, 1175), (495, 1176), (479, 1177), (480, 1178), (481, 1179), (496, 1180), (482, 1184), (497, 1185), (483, 1186), (498, 1187), (484, 1188), (485, 1194), (486, 1197), (487, 1202), (488, 1206), (489, 1210), (490, 1215), (499, 1217), (524, 1218), (500, 1219), (525, 1220), (501, 1221), (526, 1225), (502, 1226), (503, 1227), (504, 1228), (527, 1229), (505, 1232), (506, 1233), (507, 1234), (508, 1236), (509, 1237), (510, 1238), (511, 1239), (528, 1241), (512, 1242), (513, 1243), (514, 1244), (529, 1245), (515, 1249), (530, 1250), (516, 1251), (531, 1252), (517, 1253), (518, 1256), (519, 1259), (520, 1262), (521, 1267), (522, 1271), (523, 1275), (532, 1282), (557, 1283), (533, 1284), (558, 1285), (534, 1286), (559, 1290), (535, 1291), (536, 1292), (537, 1293), (560, 1294), (538, 1296), (539, 1297), (540, 1298), (541, 1299), (542, 1301), (543, 1302), (544, 1303), (561, 1306), (545, 1307), (546, 1308), (547, 1309), (562, 1310), (548, 1314), (563, 1315), (549, 1316), (564, 1317), (550, 1318), (551, 1321), (552, 1324), (553, 1327), (554, 1328), (555, 1332), (556, 1340), (565, 1347), (590, 1348), (566, 1349), (591, 1350), (567, 1351), (592, 1355), (568, 1356), (569, 1357), (570, 1358), (593, 1359), (571, 1360), (572, 1361), (573, 1362), (574, 1363), (575, 1364), (576, 1366), (577, 1367), (594, 1371), (578, 1372), (579, 1373), (580, 1374), (595, 1375), (581, 1379), (596, 1380), (582, 1381), (597, 1382), (583, 1383), (584, 1386), (585, 1389), (586, 1393), (587, 1397), (588, 1400), (589, 1405), (598, 1412), (621, 1413), (599, 1414), (622, 1415), (623, 1420), (600, 1421), (601, 1422), (602, 1423), (603, 1424), (604, 1425), (605, 1426), (606, 1427), (607, 1428), (608, 1429), (609, 1431), (624, 1436), (610, 1437), (611, 1438), (612, 1439), (613, 1444), (625, 1445), (614, 1446), (626, 1447), (615, 1451), (616, 1454), (617, 1458), (618, 1462), (619, 1465), (620, 1470), (627, 1477), (648, 1478), (628, 1479), (649, 1485), (629, 1486), (630, 1487), (631, 1488), (632, 1489), (633, 1490), (634, 1491), (635, 1492), (636, 1493), (637, 1494), (650, 1501), (638, 1502), (639, 1503), (640, 1509), (651, 1510), (641, 1511), (642, 1516), (643, 1519), (644, 1523), (645, 1527), (646, 1530), (647, 1535), (652, 1536), (653, 1539), (654, 1544), (673, 1545), (655, 1546), (656, 1552), (657, 1553), (674, 1554), (658, 1561), (659, 1562), (660, 1563), (661, 1564), (662, 1565), (663, 1566), (664, 1567), (665, 1568), (666, 1569), (675, 1570), (667, 1576), (676, 1577), (668, 1578), (669, 1584), (670, 1587), (671, 1592), (672, 1596), (677, 1601), (678, 1604), (700, 1608), (679, 1609), (701, 1610), (680, 1611), (681, 1616), (682, 1617), (683, 1618), (702, 1619), (684, 1624), (685, 1626), (686, 1627), (687, 1628), (688, 1629), (689, 1630), (690, 1631), (691, 1632), (692, 1633), (693, 1634), (703, 1635), (704, 1640), (694, 1641), (705, 1642), (695, 1643), (696, 1649), (697, 1652), (698, 1657), (699, 1661), (706, 1666), (707, 1669), (708, 1672), (731, 1673), (709, 1674), (732, 1675), (710, 1676), (733, 1680), (711, 1681), (712, 1682), (713, 1683), (734, 1684), (714, 1688), (715, 1689), (716, 1691), (717, 1692), (718, 1693), (719, 1694), (720, 1695), (735, 1696), (721, 1697), (722, 1698), (723, 1699), (736, 1700), (724, 1704), (737, 1705), (725, 1706), (738, 1707), (726, 1708), (727, 1714), (728, 1717), (729, 1722), (730, 1726), (739, 1728), (740, 1731), (741, 1734), (742, 1737), (766, 1738), (743, 1739), (767, 1740), (744, 1741), (768, 1745), (745, 1746), (746, 1747), (747, 1748), (769, 1749), (748, 1752), (749, 1753), (750, 1754), (751, 1756), (752, 1757), (753, 1758), (754, 1759), (770, 1761), (755, 1762), (756, 1763), (757, 1764), (771, 1765), (758, 1769), (772, 1770), (759, 1771), (773, 1772), (760, 1773), (761, 1776), (762, 1779), (763, 1782), (764, 1787), (765, 1791), (774, 1793), (775, 1796), (776, 1799), (777, 1802), (801, 1803), (778, 1804), (802, 1805), (779, 1806), (803, 1810), (780, 1811), (781, 1812), (782, 1813), (804, 1814), (783, 1816), (784, 1817), (785, 1818), (786, 1819), (787, 1821), (788, 1822), (789, 1823), (805, 1826), (790, 1827), (791, 1828), (792, 1829), (806, 1830), (793, 1834), (807, 1835), (794, 1836), (808, 1837), (795, 1838), (796, 1841), (797, 1844), (798, 1847), (799, 1848), (800, 1852), (809, 1858), (810, 1861), (811, 1867), (834, 1868), (812, 1869), (835, 1870), (813, 1871), (836, 1875), (814, 1876), (815, 1877), (816, 1878), (837, 1879), (817, 1880), (818, 1881), (819, 1882), (820, 1883), (821, 1884), (822, 1886), (823, 1887), (838, 1891), (824, 1892), (825, 1893), (826, 1894), (839, 1895), (827, 1899), (840, 1900), (828, 1901), (841, 1902), (829, 1903), (830, 1906), (831, 1909), (832, 1913), (833, 1917), (842, 1923), (843, 1926), (844, 1932), (865, 1933), (845, 1934), (866, 1935), (867, 1940), (846, 1941), (847, 1942), (848, 1943), (849, 1944), (850, 1945), (851, 1946), (852, 1947), (853, 1948), (854, 1949), (855, 1951), (868, 1956), (856, 1957), (857, 1958), (858, 1959), (859, 1964), (869, 1965), (860, 1966), (870, 1967), (861, 1971), (862, 1974), (863, 1978), (864, 1982), (871, 1988), (872, 1991), (873, 1997), (892, 1998), (874, 1999), (893, 2005), (875, 2006), (876, 2007), (877, 2008), (878, 2009), (879, 2010), (880, 2011), (881, 2012), (882, 2013), (883, 2014), (894, 2021), (884, 2022), (885, 2023), (886, 2029), (895, 2030), (887, 2031), (888, 2036), (889, 2039), (890, 2043), (891, 2047), (896, 2048), (897, 2052), (898, 2056), (899, 2059), (900, 2064), (917, 2065), (901, 2066), (902, 2072), (903, 2073), (918, 2074), (904, 2081), (905, 2082), (906, 2083), (907, 2084), (908, 2085), (909, 2086), (910, 2087), (911, 2088), (912, 2089), (919, 2090), (913, 2096), (920, 2097), (914, 2098), (915, 2104), (916, 2107), (921, 2113), (922, 2117), (923, 2121), (924, 2124), (944, 2128), (925, 2129), (945, 2130), (926, 2131), (927, 2136), (928, 2137), (929, 2138), (946, 2139), (930, 2144), (931, 2146), (932, 2147), (933, 2148), (934, 2149), (935, 2150), (936, 2151), (937, 2152), (938, 2153), (939, 2154), (947, 2155), (948, 2160), (940, 2161), (949, 2162), (941, 2163), (942, 2169), (943, 2172), (950, 2178), (951, 2182), (952, 2186), (953, 2189), (954, 2192), (975, 2193), (955, 2194), (976, 2195), (956, 2196), (977, 2200), (957, 2201), (958, 2202), (959, 2203), (978, 2204), (960, 2208), (961, 2209), (962, 2211), (963, 2212), (964, 2213), (965, 2214), (966, 2215), (979, 2216), (967, 2217), (968, 2218), (969, 2219), (980, 2220), (970, 2224), (981, 2225), (971, 2226), (982, 2227), (972, 2228), (973, 2234), (974, 2237), (983, 2243), (984, 2247), (985, 2248), (986, 2251), (987, 2254), (988, 2257), (1010, 2258), (989, 2259), (1011, 2260), (990, 2261), (1012, 2265), (991, 2266), (992, 2267), (993, 2268), (1013, 2269), (994, 2272), (995, 2273), (996, 2274), (997, 2276), (998, 2277), (999, 2278), (1000, 2279), (1014, 2281), (1001, 2282), (1002, 2283), (1003, 2284), (1015, 2285), (1004, 2289), (1016, 2290), (1005, 2291), (1017, 2292), (1006, 2293), (1007, 2296), (1008, 2299), (1009, 2302), (1018, 2304), (1019, 2308), (1020, 2313), (1021, 2316), (1022, 2319), (1023, 2322), (1045, 2323), (1024, 2324), (1046, 2325), (1025, 2326), (1047, 2330), (1026, 2331), (1027, 2332), (1028, 2333), (1048, 2334), (1029, 2336), (1030, 2337), (1031, 2338), (1032, 2339), (1033, 2341), (1034, 2342), (1035, 2343), (1049, 2346), (1036, 2347), (1037, 2348), (1038, 2349), (1050, 2350), (1039, 2354), (1051, 2355), (1040, 2356), (1052, 2357), (1041, 2358), (1042, 2361), (1043, 2364), (1044, 2367), (1053, 2369), (1054, 2373), (1055, 2378), (1056, 2381), (1057, 2387), (1078, 2388), (1058, 2389), (1079, 2390), (1059, 2391), (1080, 2395), (1060, 2396), (1061, 2397), (1062, 2398), (1081, 2399), (1063, 2400), (1064, 2401), (1065, 2402), (1066, 2403), (1067, 2404), (1068, 2406), (1069, 2407), (1082, 2411), (1070, 2412), (1071, 2413), (1072, 2414), (1083, 2415), (1073, 2419), (1084, 2420), (1074, 2421), (1085, 2422), (1075, 2423), (1076, 2426), (1077, 2429), (1086, 2434), (1087, 2438), (1088, 2443), (1089, 2446), (1090, 2452), (1109, 2453), (1091, 2454), (1110, 2455), (1111, 2460), (1092, 2461), (1093, 2462), (1094, 2463), (1095, 2464), (1096, 2465), (1097, 2466), (1098, 2467), (1099, 2468), (1100, 2469), (1101, 2471), (1112, 2476), (1102, 2477), (1103, 2478), (1104, 2479), (1105, 2484), (1113, 2485), (1106, 2486), (1114, 2487), (1107, 2491), (1108, 2494), (1115, 2499), (1116, 2503), (1117, 2508), (1118, 2511), (1119, 2517), (1136, 2518), (1120, 2519), (1137, 2525), (1121, 2526), (1122, 2527), (1123, 2528), (1124, 2529), (1125, 2530), (1126, 2531), (1127, 2532), (1128, 2533), (1129, 2534), (1138, 2541), (1130, 2542), (1131, 2543), (1132, 2549), (1139, 2550), (1133, 2551), (1134, 2556), (1135, 2559), (1140, 2560), (1141, 2565), (1142, 2568), (1143, 2572), (1144, 2576), (1145, 2579), (1146, 2584), (1161, 2585), (1147, 2586), (1148, 2592), (1149, 2593), (1162, 2594), (1150, 2601), (1151, 2602), (1152, 2603), (1153, 2604), (1154, 2605), (1155, 2606), (1156, 2607), (1157, 2608), (1158, 2609), (1163, 2610), (1159, 2616), (1164, 2617), (1160, 2618), (1165, 2625), (1166, 2630), (1167, 2633), (1168, 2637), (1169, 2641), (1170, 2644), (1188, 2648), (1171, 2649), (1189, 2650), (1172, 2651), (1173, 2656), (1174, 2657), (1175, 2658), (1190, 2659), (1176, 2664), (1177, 2666), (1178, 2667), (1179, 2668), (1180, 2669), (1181, 2670), (1182, 2671), (1183, 2672), (1184, 2673), (1185, 2674), (1191, 2675), (1192, 2680), (1186, 2681), (1193, 2682), (1187, 2683), (1194, 2690), (1195, 2695), (1196, 2698), (1197, 2702), (1198, 2706), (1199, 2709), (1200, 2712), (1219, 2713), (1201, 2714), (1220, 2715), (1202, 2716), (1221, 2720), (1203, 2721), (1204, 2722), (1205, 2723), (1222, 2724), (1206, 2728), (1207, 2729), (1208, 2731), (1209, 2732), (1210, 2733), (1211, 2734), (1212, 2735), (1223, 2736), (1213, 2737), (1214, 2738), (1215, 2739), (1224, 2740), (1216, 2744), (1225, 2745), (1217, 2746), (1226, 2747), (1218, 2748), (1227, 2755), (1228, 2763), (1229, 2767), (1230, 2768), (1231, 2771), (1232, 2774), (1233, 2777), (1252, 2778), (1234, 2779), (1253, 2780), (1235, 2781), (1254, 2785), (1236, 2786), (1237, 2787), (1238, 2788), (1255, 2789), (1239, 2792), (1240, 2793), (1241, 2794), (1242, 2796), (1243, 2797), (1244, 2798), (1245, 2799), (1256, 2801), (1246, 2802), (1247, 2803), (1248, 2804), (1257, 2805), (1249, 2809), (1258, 2810), (1250, 2811), (1259, 2812), (1251, 2813), (1260, 2820), (1261, 2824), (1262, 2828), (1263, 2833), (1264, 2836), (1265, 2839), (1266, 2842), (1285, 2843), (1267, 2844), (1286, 2845), (1268, 2846), (1287, 2850), (1269, 2851), (1270, 2852), (1271, 2853), (1288, 2854), (1272, 2856), (1273, 2857), (1274, 2858), (1275, 2859), (1276, 2861), (1277, 2862), (1278, 2863), (1289, 2866), (1279, 2867), (1280, 2868), (1281, 2869), (1290, 2870), (1282, 2874), (1291, 2875), (1283, 2876), (1292, 2877), (1284, 2878), (1293, 2880), (1294, 2885), (1295, 2889), (1296, 2893), (1297, 2898), (1298, 2901), (1299, 2907), (1318, 2908), (1300, 2909), (1319, 2910), (1301, 2911), (1320, 2915), (1302, 2916), (1303, 2917), (1304, 2918), (1321, 2919), (1305, 2920), (1306, 2921), (1307, 2922), (1308, 2923), (1309, 2924), (1310, 2926), (1311, 2927), (1322, 2931), (1312, 2932), (1313, 2933), (1314, 2934), (1323, 2935), (1315, 2939), (1324, 2940), (1316, 2941), (1325, 2942), (1317, 2943), (1326, 2945), (1327, 2950), (1328, 2954), (1329, 2958), (1330, 2963), (1331, 2966), (1332, 2972), (1349, 2973), (1333, 2974), (1350, 2975), (1351, 2980), (1334, 2981), (1335, 2982), (1336, 2983), (1337, 2984), (1338, 2985), (1339, 2986), (1340, 2987), (1341, 2988), (1342, 2989), (1343, 2991), (1352, 2996), (1344, 2997), (1345, 2998), (1346, 2999), (1347, 3004), (1353, 3005), (1348, 3006), (1354, 3007), (1355, 3010), (1356, 3015), (1357, 3019), (1358, 3023), (1359, 3028), (1360, 3031), (1361, 3037), (1376, 3038), (1362, 3039), (1377, 3045), (1363, 3046), (1364, 3047), (1365, 3048), (1366, 3049), (1367, 3050), (1368, 3051), (1369, 3052), (1370, 3053), (1371, 3054), (1378, 3061), (1372, 3062), (1373, 3063), (1374, 3069), (1379, 3070), (1375, 3071), (1380, 3072), (1381, 3078), (1382, 3080), (1383, 3085), (1384, 3088), (1385, 3092), (1386, 3096), (1387, 3099), (1388, 3104), (1407, 3105), (1389, 3106), (1390, 3112), (1391, 3113), (1408, 3114), (1392, 3121), (1393, 3122), (1394, 3123), (1395, 3124), (1396, 3125), (1397, 3126), (1398, 3127), (1399, 3128), (1403, 3129), (1409, 3130), (1410, 3137), (1411, 3143), (1412, 3145), (1413, 3150), (1414, 3153), (1415, 3157), (1416, 3161), (1417, 3164), (1442, 3168), (1418, 3169), (1443, 3170), (1419, 3171), (1420, 3176), (1421, 3177), (1422, 3178), (1444, 3179), (1423, 3184), (1424, 3186), (1425, 3187), (1426, 3188), (1427, 3189), (1428, 3190), (1429, 3191), (1430, 3192), (1434, 3193), (1438, 3194), (1445, 3195), (1446, 3202), (1447, 3210), (1448, 3215), (1449, 3218), (1450, 3222), (1451, 3226), (1452, 3229), (1453, 3232), (1478, 3233), (1454, 3234), (1479, 3235), (1455, 3236), (1480, 3240), (1456, 3241), (1457, 3242), (1458, 3243), (1481, 3244), (1459, 3248), (1460, 3249), (1461, 3251), (1462, 3252), (1463, 3253), (1464, 3254), (1465, 3255), (1482, 3256), (1466, 3257), (1470, 3258), (1474, 3259), (1483, 3260), (1484, 3267), (1485, 3275), (1486, 3283), (1487, 3287), (1488, 3288), (1489, 3291), (1490, 3294), (1491, 3297), (1516, 3298), (1492, 3299), (1517, 3300), (1493, 3301), (1518, 3305), (1494, 3306), (1495, 3307), (1496, 3308), (1519, 3309), (1497, 3312), (1498, 3313), (1499, 3314), (1500, 3316), (1501, 3317), (1502, 3318), (1503, 3319), (1520, 3321), (1504, 3322), (1508, 3323), (1512, 3324), (1521, 3325), (1522, 3332), (1523, 3340), (1524, 3344), (1525, 3348), (1526, 3353), (1527, 3356), (1528, 3359), (1529, 3362), (1554, 3363), (1530, 3364), (1555, 3365), (1531, 3366), (1556, 3370), (1532, 3371), (1533, 3372), (1534, 3373), (1557, 3374), (1535, 3376), (1536, 3377), (1537, 3378), (1538, 3379), (1539, 3381), (1540, 3382), (1541, 3383), (1558, 3386), (1542, 3387), (1546, 3388), (1550, 3389), (1559, 3390), (1560, 3397), (1561, 3400), (1562, 3405), (1563, 3409), (1564, 3413), (1565, 3418), (1566, 3421), (1567, 3427), (1592, 3428), (1568, 3429), (1593, 3430), (1569, 3431), (1594, 3435), (1570, 3436), (1571, 3437), (1572, 3438), (1595, 3439), (1573, 3440), (1574, 3441), (1575, 3442), (1576, 3443), (1577, 3444), (1578, 3446), (1579, 3447), (1596, 3451), (1580, 3452), (1584, 3453), (1588, 3454), (1597, 3455), (1598, 3456), (1599, 3462), (1600, 3465), (1601, 3470), (1602, 3474), (1603, 3478), (1604, 3483), (1605, 3486), (1606, 3492), (1630, 3493), (1607, 3494), (1631, 3495), (1632, 3500), (1608, 3501), (1609, 3502), (1610, 3503), (1611, 3504), (1612, 3505), (1613, 3506), (1614, 3507), (1615, 3508), (1616, 3509), (1617, 3511), (1633, 3516), (1618, 3517), (1622, 3518), (1626, 3519), (1634, 3521), (1635, 3527), (1636, 3530), (1637, 3535), (1638, 3539), (1639, 3543), (1640, 3548), (1641, 3551), (1642, 3557), (1661, 3558), (1643, 3559), (1662, 3565), (1644, 3566), (1645, 3567), (1646, 3568), (1647, 3569), (1648, 3570), (1649, 3571), (1650, 3572), (1651, 3573), (1652, 3574), (1663, 3581), (1653, 3582), (1657, 3583), (1664, 3584), (1665, 3591), (1666, 3592), (1667, 3598), (1668, 3600), (1669, 3605), (1670, 3608), (1671, 3612), (1672, 3616), (1673, 3619), (1674, 3624), (1685, 3625), (1675, 3626), (1676, 3632), (1677, 3633), (1686, 3634), (1678, 3641), (1679, 3642), (1680, 3643), (1681, 3644), (1682, 3645), (1683, 3646), (1684, 3647), (1687, 3649), (1688, 3657), (1689, 3663), (1690, 3665), (1691, 3670), (1692, 3673), (1693, 3677), (1694, 3681), (1695, 3684), (1708, 3688), (1696, 3689), (1709, 3690), (1697, 3691), (1698, 3696), (1699, 3697), (1700, 3698), (1710, 3699), (1701, 3704), (1702, 3706), (1703, 3707), (1704, 3708), (1705, 3709), (1706, 3710), (1707, 3711), (1711, 3714), (1712, 3722), (1713, 3730), (1714, 3735), (1715, 3738), (1716, 3742), (1717, 3746), (1718, 3749), (1719, 3752), (1732, 3753), (1720, 3754), (1733, 3755), (1721, 3756), (1734, 3760), (1722, 3761), (1723, 3762), (1724, 3763), (1735, 3764), (1725, 3768), (1726, 3769), (1727, 3771), (1728, 3772), (1729, 3773), (1730, 3774), (1731, 3775), (1736, 3779), (1737, 3787), (1738, 3795), (1739, 3803), (1740, 3807), (1741, 3808), (1742, 3811), (1743, 3814), (1744, 3817), (1757, 3818), (1745, 3819), (1758, 3820), (1746, 3821), (1759, 3825), (1747, 3826), (1748, 3827), (1749, 3828), (1760, 3829), (1750, 3832), (1751, 3833), (1752, 3834), (1753, 3836), (1754, 3837), (1755, 3838), (1756, 3839), (1761, 3844), (1762, 3852), (1763, 3860), (1764, 3864), (1765, 3868), (1766, 3873), (1767, 3876), (1768, 3879), (1769, 3882), (1782, 3883), (1770, 3884), (1783, 3885), (1771, 3886), (1784, 3890), (1772, 3891), (1773, 3892), (1774, 3893), (1785, 3894), (1775, 3896), (1776, 3897), (1777, 3898), (1778, 3899), (1779, 3901), (1780, 3902), (1781, 3903), (1786, 3909), (1787, 3917), (1788, 3920), (1789, 3925), (1790, 3929), (1791, 3933), (1792, 3938), (1793, 3941), (1794, 3947), (1807, 3948), (1795, 3949), (1808, 3950), (1796, 3951), (1809, 3955), (1797, 3956), (1798, 3957), (1799, 3958), (1810, 3959), (1800, 3960), (1801, 3961), (1802, 3962), (1803, 3963), (1804, 3964), (1805, 3966), (1806, 3967), (1811, 3974), (1812, 3976), (1813, 3982), (1814, 3985), (1815, 3990), (1816, 3994), (1817, 3998), (1818, 4003), (1819, 4006), (1820, 4012), (1832, 4013), (1821, 4014), (1833, 4015), (1834, 4020), (1822, 4021), (1823, 4022), (1824, 4023), (1825, 4024), (1826, 4025), (1827, 4026), (1828, 4027), (1829, 4028), (1830, 4029), (1831, 4031), (1835, 4032), (1836, 4039), (1837, 4041), (1838, 4047), (1839, 4050), (1840, 4055), (1841, 4059), (1842, 4063), (1843, 4068), (1844, 4071), (1845, 4077), (1856, 4078), (1846, 4079), (1857, 4085), (1847, 4086), (1848, 4087), (1849, 4088), (1850, 4089), (1851, 4090), (1852, 4091), (1853, 4092), (1854, 4093), (1855, 4094), (1400, 7224), (1404, 7225), (1431, 7288), (1435, 7289), (1439, 7290), (1467, 7353), (1471, 7354), (1475, 7355), (1505, 7418), (1509, 7419), (1513, 7420), (1543, 7483), (1547, 7484), (1551, 7485), (1581, 7548), (1585, 7549), (1589, 7550), (1619, 7613), (1623, 7614), (1627, 7615), (1654, 7678), (1658, 7679), (1401, 11320), (1405, 11321), (1432, 11384), (1436, 11385), (1440, 11386), (1468, 11449), (1472, 11450), (1476, 11451), (1506, 11514), (1510, 11515), (1514, 11516), (1544, 11579), (1548, 11580), (1552, 11581), (1582, 11644), (1586, 11645), (1590, 11646), (1620, 11709), (1624, 11710), (1628, 11711), (1655, 11774), (1659, 11775), (1402, 15416), (1406, 15417), (1433, 15480), (1437, 15481), (1441, 15482), (1469, 15545), (1473, 15546), (1477, 15547), (1507, 15610), (1511, 15611), (1515, 15612), (1545, 15675), (1549, 15676), (1553, 15677), (1583, 15740), (1587, 15741), (1591, 15742), (1621, 15805), (1625, 15806), (1629, 15807), (1656, 15870), (1660, 15871)])
    };
}
pub const NN_TOTAL_OUTPUT_SIZE_PER_POS: usize = 1858;   // The length of the HashMaps above


pub const START_POSITION: &str = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";

#[repr(u8)]
pub enum PlayerColour {
    WHITE = 0,
    BLACK = 1,
}

#[repr(u8)]
#[derive(Copy, Clone, Debug, PartialEq)]
pub enum PieceType {
    NONE = 0,
    KNIGHT = 1,
    BISHOP = 2,
    ROOK = 3,
    QUEEN = 4,
    KING = 5,
    PAWN = 6,
}

pub const RANK_1: u64 = 0xff;
pub const RANK_2: u64 = 0xff00;
pub const RANK_3: u64 = 0xff0000;
pub const RANK_4: u64 = 0xff000000;
pub const RANK_5: u64 = 0xff00000000;
pub const RANK_6: u64 = 0xff0000000000;
pub const RANK_7: u64 = 0xff000000000000;
pub const RANK_8: u64 = 0xff00000000000000;

pub const A_FILE: u64 = 0x0101010101010101;
pub const B_FILE: u64 = 0x0202020202020202;
pub const C_FILE: u64 = 0x0404040404040404;
pub const D_FILE: u64 = 0x0808080808080808;
pub const E_FILE: u64 = 0x1010101010101010;
pub const F_FILE: u64 = 0x2020202020202020;
pub const G_FILE: u64 = 0x4040404040404040;
pub const H_FILE: u64 = 0x8080808080808080;

pub const RANKS: [u64; 64] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff00, 0xff00, 0xff00, 0xff00, 0xff00, 0xff00, 0xff00, 0xff00, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff0000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff00000000, 0xff00000000, 0xff00000000, 0xff00000000, 0xff00000000, 0xff00000000, 0xff00000000, 0xff00000000, 0xff0000000000, 0xff0000000000, 0xff0000000000, 0xff0000000000, 0xff0000000000, 0xff0000000000, 0xff0000000000, 0xff0000000000, 0xff000000000000, 0xff000000000000, 0xff000000000000, 0xff000000000000, 0xff000000000000, 0xff000000000000, 0xff000000000000, 0xff000000000000, 0xff00000000000000, 0xff00000000000000, 0xff00000000000000, 0xff00000000000000, 0xff00000000000000, 0xff00000000000000, 0xff00000000000000, 0xff00000000000000];
pub const FILES: [u64; 64] = [0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080, 0x101010101010101, 0x202020202020202, 0x404040404040404, 0x808080808080808, 0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080];
pub const CORNERS: u64 = 0x8100000000000081;
pub const VERTICAL_FLIP_INDICES: [u8; 64] = [56, 57, 58, 59, 60, 61, 62, 63, 48, 49, 50, 51, 52, 53, 54, 55, 40, 41, 42, 43, 44, 45, 46, 47, 32, 33, 34, 35, 36, 37, 38, 39, 24, 25, 26, 27, 28, 29, 30, 31, 16, 17, 18, 19, 20, 21, 22, 23, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7];

pub const DIAGONALS: [u64; 64] = [0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x804020, 0x8040, 0x80, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x804020, 0x8040, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x804020, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x80402010, 0x804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x8040201008, 0x402010000000000, 0x804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x804020100804, 0x201000000000000, 0x402010000000000, 0x804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201, 0x80402010080402, 0x100000000000000, 0x201000000000000, 0x402010000000000, 0x804020100000000, 0x1008040201000000, 0x2010080402010000, 0x4020100804020100, 0x8040201008040201];
pub const ANTI_DIAGONALS: [u64; 64] = [0x1, 0x102, 0x10204, 0x1020408, 0x102040810, 0x10204081020, 0x1020408102040, 0x102040810204080, 0x102, 0x10204, 0x1020408, 0x102040810, 0x10204081020, 0x1020408102040, 0x102040810204080, 0x204081020408000, 0x10204, 0x1020408, 0x102040810, 0x10204081020, 0x1020408102040, 0x102040810204080, 0x204081020408000, 0x408102040800000, 0x1020408, 0x102040810, 0x10204081020, 0x1020408102040, 0x102040810204080, 0x204081020408000, 0x408102040800000, 0x810204080000000, 0x102040810, 0x10204081020, 0x1020408102040, 0x102040810204080, 0x204081020408000, 0x408102040800000, 0x810204080000000, 0x1020408000000000, 0x10204081020, 0x1020408102040, 0x102040810204080, 0x204081020408000, 0x408102040800000, 0x810204080000000, 0x1020408000000000, 0x2040800000000000, 0x1020408102040, 0x102040810204080, 0x204081020408000, 0x408102040800000, 0x810204080000000, 0x1020408000000000, 0x2040800000000000, 0x4080000000000000, 0x102040810204080, 0x204081020408000, 0x408102040800000, 0x810204080000000, 0x1020408000000000, 0x2040800000000000, 0x4080000000000000, 0x8000000000000000];
pub const SINGLE_BITBOARDS: [u64; 64] = [0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, 0x400, 0x800, 0x1000, 0x2000, 0x4000, 0x8000, 0x10000, 0x20000, 0x40000, 0x80000, 0x100000, 0x200000, 0x400000, 0x800000, 0x1000000, 0x2000000, 0x4000000, 0x8000000, 0x10000000, 0x20000000, 0x40000000, 0x80000000, 0x100000000, 0x200000000, 0x400000000, 0x800000000, 0x1000000000, 0x2000000000, 0x4000000000, 0x8000000000, 0x10000000000, 0x20000000000, 0x40000000000, 0x80000000000, 0x100000000000, 0x200000000000, 0x400000000000, 0x800000000000, 0x1000000000000, 0x2000000000000, 0x4000000000000, 0x8000000000000, 0x10000000000000, 0x20000000000000, 0x40000000000000, 0x80000000000000, 0x100000000000000, 0x200000000000000, 0x400000000000000, 0x800000000000000, 0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000];

pub const KNIGHT_ATTACKS: [u64; 64] = [0x20400, 0x50800, 0xa1100, 0x142200, 0x284400, 0x508800, 0xa01000, 0x402000, 0x2040004, 0x5080008, 0xa110011, 0x14220022, 0x28440044, 0x50880088, 0xa0100010, 0x40200020, 0x204000402, 0x508000805, 0xa1100110a, 0x1422002214, 0x2844004428, 0x5088008850, 0xa0100010a0, 0x4020002040, 0x20400040200, 0x50800080500, 0xa1100110a00, 0x142200221400, 0x284400442800, 0x508800885000, 0xa0100010a000, 0x402000204000, 0x2040004020000, 0x5080008050000, 0xa1100110a0000, 0x14220022140000, 0x28440044280000, 0x50880088500000, 0xa0100010a00000, 0x40200020400000, 0x204000402000000, 0x508000805000000, 0xa1100110a000000, 0x1422002214000000, 0x2844004428000000, 0x5088008850000000, 0xa0100010a0000000, 0x4020002040000000, 0x400040200000000, 0x800080500000000, 0x1100110a00000000, 0x2200221400000000, 0x4400442800000000, 0x8800885000000000, 0x100010a000000000, 0x2000204000000000, 0x4020000000000, 0x8050000000000, 0x110a0000000000, 0x22140000000000, 0x44280000000000, 0x88500000000000, 0x10a00000000000, 0x20400000000000];
pub const BISHOP_ATTACKS: [u64; 64] = [0x8040201008040200, 0x80402010080500, 0x804020110a00, 0x8041221400, 0x182442800, 0x10204885000, 0x102040810a000, 0x102040810204000, 0x4020100804020002, 0x8040201008050005, 0x804020110a000a, 0x804122140014, 0x18244280028, 0x1020488500050, 0x102040810a000a0, 0x204081020400040, 0x2010080402000204, 0x4020100805000508, 0x804020110a000a11, 0x80412214001422, 0x1824428002844, 0x102048850005088, 0x2040810a000a010, 0x408102040004020, 0x1008040200020408, 0x2010080500050810, 0x4020110a000a1120, 0x8041221400142241, 0x182442800284482, 0x204885000508804, 0x40810a000a01008, 0x810204000402010, 0x804020002040810, 0x1008050005081020, 0x20110a000a112040, 0x4122140014224180, 0x8244280028448201, 0x488500050880402, 0x810a000a0100804, 0x1020400040201008, 0x402000204081020, 0x805000508102040, 0x110a000a11204080, 0x2214001422418000, 0x4428002844820100, 0x8850005088040201, 0x10a000a010080402, 0x2040004020100804, 0x200020408102040, 0x500050810204080, 0xa000a1120408000, 0x1400142241800000, 0x2800284482010000, 0x5000508804020100, 0xa000a01008040201, 0x4000402010080402, 0x2040810204080, 0x5081020408000, 0xa112040800000, 0x14224180000000, 0x28448201000000, 0x50880402010000, 0xa0100804020100, 0x40201008040201];
pub const ROOK_ATTACKS: [u64; 64] = [0x1010101010101fe, 0x2020202020202fd, 0x4040404040404fb, 0x8080808080808f7, 0x10101010101010ef, 0x20202020202020df, 0x40404040404040bf, 0x808080808080807f, 0x10101010101fe01, 0x20202020202fd02, 0x40404040404fb04, 0x80808080808f708, 0x101010101010ef10, 0x202020202020df20, 0x404040404040bf40, 0x8080808080807f80, 0x101010101fe0101, 0x202020202fd0202, 0x404040404fb0404, 0x808080808f70808, 0x1010101010ef1010, 0x2020202020df2020, 0x4040404040bf4040, 0x80808080807f8080, 0x1010101fe010101, 0x2020202fd020202, 0x4040404fb040404, 0x8080808f7080808, 0x10101010ef101010, 0x20202020df202020, 0x40404040bf404040, 0x808080807f808080, 0x10101fe01010101, 0x20202fd02020202, 0x40404fb04040404, 0x80808f708080808, 0x101010ef10101010, 0x202020df20202020, 0x404040bf40404040, 0x8080807f80808080, 0x101fe0101010101, 0x202fd0202020202, 0x404fb0404040404, 0x808f70808080808, 0x1010ef1010101010, 0x2020df2020202020, 0x4040bf4040404040, 0x80807f8080808080, 0x1fe010101010101, 0x2fd020202020202, 0x4fb040404040404, 0x8f7080808080808, 0x10ef101010101010, 0x20df202020202020, 0x40bf404040404040, 0x807f808080808080, 0xfe01010101010101, 0xfd02020202020202, 0xfb04040404040404, 0xf708080808080808, 0xef10101010101010, 0xdf20202020202020, 0xbf40404040404040, 0x7f80808080808080];
pub const QUEEN_ATTACKS: [u64; 64] = [0x81412111090503fe, 0x2824222120a07fd, 0x404844424150efb, 0x8080888492a1cf7, 0x10101011925438ef, 0x2020212224a870df, 0x404142444850e0bf, 0x8182848890a0c07f, 0x412111090503fe03, 0x824222120a07fd07, 0x4844424150efb0e, 0x80888492a1cf71c, 0x101011925438ef38, 0x20212224a870df70, 0x4142444850e0bfe0, 0x82848890a0c07fc0, 0x2111090503fe0305, 0x4222120a07fd070a, 0x844424150efb0e15, 0x888492a1cf71c2a, 0x1011925438ef3854, 0x212224a870df70a8, 0x42444850e0bfe050, 0x848890a0c07fc0a0, 0x11090503fe030509, 0x22120a07fd070a12, 0x4424150efb0e1524, 0x88492a1cf71c2a49, 0x11925438ef385492, 0x2224a870df70a824, 0x444850e0bfe05048, 0x8890a0c07fc0a090, 0x90503fe03050911, 0x120a07fd070a1222, 0x24150efb0e152444, 0x492a1cf71c2a4988, 0x925438ef38549211, 0x24a870df70a82422, 0x4850e0bfe0504844, 0x90a0c07fc0a09088, 0x503fe0305091121, 0xa07fd070a122242, 0x150efb0e15244484, 0x2a1cf71c2a498808, 0x5438ef3854921110, 0xa870df70a8242221, 0x50e0bfe050484442, 0xa0c07fc0a0908884, 0x3fe030509112141, 0x7fd070a12224282, 0xefb0e1524448404, 0x1cf71c2a49880808, 0x38ef385492111010, 0x70df70a824222120, 0xe0bfe05048444241, 0xc07fc0a090888482, 0xfe03050911214181, 0xfd070a1222428202, 0xfb0e152444840404, 0xf71c2a4988080808, 0xef38549211101010, 0xdf70a82422212020, 0xbfe0504844424140, 0x7fc0a09088848281];
pub const KING_ATTACKS: [u64; 64] = [0x302, 0x705, 0xe0a, 0x1c14, 0x3828, 0x7050, 0xe0a0, 0xc040, 0x30203, 0x70507, 0xe0a0e, 0x1c141c, 0x382838, 0x705070, 0xe0a0e0, 0xc040c0, 0x3020300, 0x7050700, 0xe0a0e00, 0x1c141c00, 0x38283800, 0x70507000, 0xe0a0e000, 0xc040c000, 0x302030000, 0x705070000, 0xe0a0e0000, 0x1c141c0000, 0x3828380000, 0x7050700000, 0xe0a0e00000, 0xc040c00000, 0x30203000000, 0x70507000000, 0xe0a0e000000, 0x1c141c000000, 0x382838000000, 0x705070000000, 0xe0a0e0000000, 0xc040c0000000, 0x3020300000000, 0x7050700000000, 0xe0a0e00000000, 0x1c141c00000000, 0x38283800000000, 0x70507000000000, 0xe0a0e000000000, 0xc040c000000000, 0x302030000000000, 0x705070000000000, 0xe0a0e0000000000, 0x1c141c0000000000, 0x3828380000000000, 0x7050700000000000, 0xe0a0e00000000000, 0xc040c00000000000, 0x203000000000000, 0x507000000000000, 0xa0e000000000000, 0x141c000000000000, 0x2838000000000000, 0x5070000000000000, 0xa0e0000000000000, 0x40c0000000000000];

pub const ATTACK_RAYS: [u64; 4096] = [0x0, 0x3, 0x7, 0xf, 0x1f, 0x3f, 0x7f, 0xff, 0x101, 0x201, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10101, 0x0, 0x40201, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010101, 0x0, 0x0, 0x8040201, 0x0, 0x0, 0x0, 0x0, 0x101010101, 0x0, 0x0, 0x0, 0x1008040201, 0x0, 0x0, 0x0, 0x10101010101, 0x0, 0x0, 0x0, 0x0, 0x201008040201, 0x0, 0x0, 0x1010101010101, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40201008040201, 0x0, 0x101010101010101, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8040201008040201, 0x3, 0x0, 0x6, 0xe, 0x1e, 0x3e, 0x7e, 0xfe, 0x102, 0x202, 0x402, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20202, 0x0, 0x80402, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020202, 0x0, 0x0, 0x10080402, 0x0, 0x0, 0x0, 0x0, 0x202020202, 0x0, 0x0, 0x0, 0x2010080402, 0x0, 0x0, 0x0, 0x20202020202, 0x0, 0x0, 0x0, 0x0, 0x402010080402, 0x0, 0x0, 0x2020202020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80402010080402, 0x0, 0x202020202020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x6, 0x0, 0xc, 0x1c, 0x3c, 0x7c, 0xfc, 0x0, 0x204, 0x404, 0x804, 0x0, 0x0, 0x0, 0x0, 0x10204, 0x0, 0x40404, 0x0, 0x100804, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404, 0x0, 0x0, 0x20100804, 0x0, 0x0, 0x0, 0x0, 0x404040404, 0x0, 0x0, 0x0, 0x4020100804, 0x0, 0x0, 0x0, 0x40404040404, 0x0, 0x0, 0x0, 0x0, 0x804020100804, 0x0, 0x0, 0x4040404040404, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x404040404040404, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xe, 0xc, 0x0, 0x18, 0x38, 0x78, 0xf8, 0x0, 0x0, 0x408, 0x808, 0x1008, 0x0, 0x0, 0x0, 0x0, 0x20408, 0x0, 0x80808, 0x0, 0x201008, 0x0, 0x0, 0x1020408, 0x0, 0x0, 0x8080808, 0x0, 0x0, 0x40201008, 0x0, 0x0, 0x0, 0x0, 0x808080808, 0x0, 0x0, 0x0, 0x8040201008, 0x0, 0x0, 0x0, 0x80808080808, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080808, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x808080808080808, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x1e, 0x1c, 0x18, 0x0, 0x30, 0x70, 0xf0, 0x0, 0x0, 0x0, 0x810, 0x1010, 0x2010, 0x0, 0x0, 0x0, 0x0, 0x40810, 0x0, 0x101010, 0x0, 0x402010, 0x0, 0x0, 0x2040810, 0x0, 0x0, 0x10101010, 0x0, 0x0, 0x80402010, 0x102040810, 0x0, 0x0, 0x0, 0x1010101010, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101010101010, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10101010101010, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010101010101010, 0x0, 0x0, 0x0, 0x3f, 0x3e, 0x3c, 0x38, 0x30, 0x0, 0x60, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x1020, 0x2020, 0x4020, 0x0, 0x0, 0x0, 0x0, 0x81020, 0x0, 0x202020, 0x0, 0x804020, 0x0, 0x0, 0x4081020, 0x0, 0x0, 0x20202020, 0x0, 0x0, 0x0, 0x204081020, 0x0, 0x0, 0x0, 0x2020202020, 0x0, 0x0, 0x10204081020, 0x0, 0x0, 0x0, 0x0, 0x202020202020, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20202020202020, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020202020202020, 0x0, 0x0, 0x7f, 0x7e, 0x7c, 0x78, 0x70, 0x60, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2040, 0x4040, 0x8040, 0x0, 0x0, 0x0, 0x0, 0x102040, 0x0, 0x404040, 0x0, 0x0, 0x0, 0x0, 0x8102040, 0x0, 0x0, 0x40404040, 0x0, 0x0, 0x0, 0x408102040, 0x0, 0x0, 0x0, 0x4040404040, 0x0, 0x0, 0x20408102040, 0x0, 0x0, 0x0, 0x0, 0x404040404040, 0x0, 0x1020408102040, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40404040404040, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404040404040, 0x0, 0xff, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4080, 0x8080, 0x0, 0x0, 0x0, 0x0, 0x0, 0x204080, 0x0, 0x808080, 0x0, 0x0, 0x0, 0x0, 0x10204080, 0x0, 0x0, 0x80808080, 0x0, 0x0, 0x0, 0x810204080, 0x0, 0x0, 0x0, 0x8080808080, 0x0, 0x0, 0x40810204080, 0x0, 0x0, 0x0, 0x0, 0x808080808080, 0x0, 0x2040810204080, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80808080808080, 0x102040810204080, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080808080, 0x101, 0x102, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x300, 0x700, 0xf00, 0x1f00, 0x3f00, 0x7f00, 0xff00, 0x10100, 0x20100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010100, 0x0, 0x4020100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101010100, 0x0, 0x0, 0x804020100, 0x0, 0x0, 0x0, 0x0, 0x10101010100, 0x0, 0x0, 0x0, 0x100804020100, 0x0, 0x0, 0x0, 0x1010101010100, 0x0, 0x0, 0x0, 0x0, 0x20100804020100, 0x0, 0x0, 0x101010101010100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4020100804020100, 0x0, 0x201, 0x202, 0x204, 0x0, 0x0, 0x0, 0x0, 0x0, 0x300, 0x0, 0x600, 0xe00, 0x1e00, 0x3e00, 0x7e00, 0xfe00, 0x10200, 0x20200, 0x40200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020200, 0x0, 0x8040200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x202020200, 0x0, 0x0, 0x1008040200, 0x0, 0x0, 0x0, 0x0, 0x20202020200, 0x0, 0x0, 0x0, 0x201008040200, 0x0, 0x0, 0x0, 0x2020202020200, 0x0, 0x0, 0x0, 0x0, 0x40201008040200, 0x0, 0x0, 0x202020202020200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8040201008040200, 0x0, 0x402, 0x404, 0x408, 0x0, 0x0, 0x0, 0x0, 0x700, 0x600, 0x0, 0xc00, 0x1c00, 0x3c00, 0x7c00, 0xfc00, 0x0, 0x20400, 0x40400, 0x80400, 0x0, 0x0, 0x0, 0x0, 0x1020400, 0x0, 0x4040400, 0x0, 0x10080400, 0x0, 0x0, 0x0, 0x0, 0x0, 0x404040400, 0x0, 0x0, 0x2010080400, 0x0, 0x0, 0x0, 0x0, 0x40404040400, 0x0, 0x0, 0x0, 0x402010080400, 0x0, 0x0, 0x0, 0x4040404040400, 0x0, 0x0, 0x0, 0x0, 0x80402010080400, 0x0, 0x0, 0x404040404040400, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x804, 0x808, 0x810, 0x0, 0x0, 0x0, 0xf00, 0xe00, 0xc00, 0x0, 0x1800, 0x3800, 0x7800, 0xf800, 0x0, 0x0, 0x40800, 0x80800, 0x100800, 0x0, 0x0, 0x0, 0x0, 0x2040800, 0x0, 0x8080800, 0x0, 0x20100800, 0x0, 0x0, 0x102040800, 0x0, 0x0, 0x808080800, 0x0, 0x0, 0x4020100800, 0x0, 0x0, 0x0, 0x0, 0x80808080800, 0x0, 0x0, 0x0, 0x804020100800, 0x0, 0x0, 0x0, 0x8080808080800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x808080808080800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1008, 0x1010, 0x1020, 0x0, 0x0, 0x1f00, 0x1e00, 0x1c00, 0x1800, 0x0, 0x3000, 0x7000, 0xf000, 0x0, 0x0, 0x0, 0x81000, 0x101000, 0x201000, 0x0, 0x0, 0x0, 0x0, 0x4081000, 0x0, 0x10101000, 0x0, 0x40201000, 0x0, 0x0, 0x204081000, 0x0, 0x0, 0x1010101000, 0x0, 0x0, 0x8040201000, 0x10204081000, 0x0, 0x0, 0x0, 0x101010101000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10101010101000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010101010101000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2010, 0x2020, 0x2040, 0x0, 0x3f00, 0x3e00, 0x3c00, 0x3800, 0x3000, 0x0, 0x6000, 0xe000, 0x0, 0x0, 0x0, 0x0, 0x102000, 0x202000, 0x402000, 0x0, 0x0, 0x0, 0x0, 0x8102000, 0x0, 0x20202000, 0x0, 0x80402000, 0x0, 0x0, 0x408102000, 0x0, 0x0, 0x2020202000, 0x0, 0x0, 0x0, 0x20408102000, 0x0, 0x0, 0x0, 0x202020202000, 0x0, 0x0, 0x1020408102000, 0x0, 0x0, 0x0, 0x0, 0x20202020202000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020202020202000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4020, 0x4040, 0x4080, 0x7f00, 0x7e00, 0x7c00, 0x7800, 0x7000, 0x6000, 0x0, 0xc000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x204000, 0x404000, 0x804000, 0x0, 0x0, 0x0, 0x0, 0x10204000, 0x0, 0x40404000, 0x0, 0x0, 0x0, 0x0, 0x810204000, 0x0, 0x0, 0x4040404000, 0x0, 0x0, 0x0, 0x40810204000, 0x0, 0x0, 0x0, 0x404040404000, 0x0, 0x0, 0x2040810204000, 0x0, 0x0, 0x0, 0x0, 0x40404040404000, 0x0, 0x102040810204000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404040404000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8040, 0x8080, 0xff00, 0xfe00, 0xfc00, 0xf800, 0xf000, 0xe000, 0xc000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x408000, 0x808000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20408000, 0x0, 0x80808000, 0x0, 0x0, 0x0, 0x0, 0x1020408000, 0x0, 0x0, 0x8080808000, 0x0, 0x0, 0x0, 0x81020408000, 0x0, 0x0, 0x0, 0x808080808000, 0x0, 0x0, 0x4081020408000, 0x0, 0x0, 0x0, 0x0, 0x80808080808000, 0x0, 0x204081020408000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080808000, 0x10101, 0x0, 0x10204, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10100, 0x10200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30000, 0x70000, 0xf0000, 0x1f0000, 0x3f0000, 0x7f0000, 0xff0000, 0x1010000, 0x2010000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101010000, 0x0, 0x402010000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10101010000, 0x0, 0x0, 0x80402010000, 0x0, 0x0, 0x0, 0x0, 0x1010101010000, 0x0, 0x0, 0x0, 0x10080402010000, 0x0, 0x0, 0x0, 0x101010101010000, 0x0, 0x0, 0x0, 0x0, 0x2010080402010000, 0x0, 0x0, 0x0, 0x20202, 0x0, 0x20408, 0x0, 0x0, 0x0, 0x0, 0x20100, 0x20200, 0x20400, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30000, 0x0, 0x60000, 0xe0000, 0x1e0000, 0x3e0000, 0x7e0000, 0xfe0000, 0x1020000, 0x2020000, 0x4020000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x202020000, 0x0, 0x804020000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20202020000, 0x0, 0x0, 0x100804020000, 0x0, 0x0, 0x0, 0x0, 0x2020202020000, 0x0, 0x0, 0x0, 0x20100804020000, 0x0, 0x0, 0x0, 0x202020202020000, 0x0, 0x0, 0x0, 0x0, 0x4020100804020000, 0x0, 0x40201, 0x0, 0x40404, 0x0, 0x40810, 0x0, 0x0, 0x0, 0x0, 0x40200, 0x40400, 0x40800, 0x0, 0x0, 0x0, 0x0, 0x70000, 0x60000, 0x0, 0xc0000, 0x1c0000, 0x3c0000, 0x7c0000, 0xfc0000, 0x0, 0x2040000, 0x4040000, 0x8040000, 0x0, 0x0, 0x0, 0x0, 0x102040000, 0x0, 0x404040000, 0x0, 0x1008040000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40404040000, 0x0, 0x0, 0x201008040000, 0x0, 0x0, 0x0, 0x0, 0x4040404040000, 0x0, 0x0, 0x0, 0x40201008040000, 0x0, 0x0, 0x0, 0x404040404040000, 0x0, 0x0, 0x0, 0x0, 0x8040201008040000, 0x0, 0x80402, 0x0, 0x80808, 0x0, 0x81020, 0x0, 0x0, 0x0, 0x0, 0x80400, 0x80800, 0x81000, 0x0, 0x0, 0x0, 0xf0000, 0xe0000, 0xc0000, 0x0, 0x180000, 0x380000, 0x780000, 0xf80000, 0x0, 0x0, 0x4080000, 0x8080000, 0x10080000, 0x0, 0x0, 0x0, 0x0, 0x204080000, 0x0, 0x808080000, 0x0, 0x2010080000, 0x0, 0x0, 0x10204080000, 0x0, 0x0, 0x80808080000, 0x0, 0x0, 0x402010080000, 0x0, 0x0, 0x0, 0x0, 0x8080808080000, 0x0, 0x0, 0x0, 0x80402010080000, 0x0, 0x0, 0x0, 0x808080808080000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x100804, 0x0, 0x101010, 0x0, 0x102040, 0x0, 0x0, 0x0, 0x0, 0x100800, 0x101000, 0x102000, 0x0, 0x0, 0x1f0000, 0x1e0000, 0x1c0000, 0x180000, 0x0, 0x300000, 0x700000, 0xf00000, 0x0, 0x0, 0x0, 0x8100000, 0x10100000, 0x20100000, 0x0, 0x0, 0x0, 0x0, 0x408100000, 0x0, 0x1010100000, 0x0, 0x4020100000, 0x0, 0x0, 0x20408100000, 0x0, 0x0, 0x101010100000, 0x0, 0x0, 0x804020100000, 0x1020408100000, 0x0, 0x0, 0x0, 0x10101010100000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010101010100000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x201008, 0x0, 0x202020, 0x0, 0x204080, 0x0, 0x0, 0x0, 0x0, 0x201000, 0x202000, 0x204000, 0x0, 0x3f0000, 0x3e0000, 0x3c0000, 0x380000, 0x300000, 0x0, 0x600000, 0xe00000, 0x0, 0x0, 0x0, 0x0, 0x10200000, 0x20200000, 0x40200000, 0x0, 0x0, 0x0, 0x0, 0x810200000, 0x0, 0x2020200000, 0x0, 0x8040200000, 0x0, 0x0, 0x40810200000, 0x0, 0x0, 0x202020200000, 0x0, 0x0, 0x0, 0x2040810200000, 0x0, 0x0, 0x0, 0x20202020200000, 0x0, 0x0, 0x102040810200000, 0x0, 0x0, 0x0, 0x0, 0x2020202020200000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x402010, 0x0, 0x404040, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x402000, 0x404000, 0x408000, 0x7f0000, 0x7e0000, 0x7c0000, 0x780000, 0x700000, 0x600000, 0x0, 0xc00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20400000, 0x40400000, 0x80400000, 0x0, 0x0, 0x0, 0x0, 0x1020400000, 0x0, 0x4040400000, 0x0, 0x0, 0x0, 0x0, 0x81020400000, 0x0, 0x0, 0x404040400000, 0x0, 0x0, 0x0, 0x4081020400000, 0x0, 0x0, 0x0, 0x40404040400000, 0x0, 0x0, 0x204081020400000, 0x0, 0x0, 0x0, 0x0, 0x4040404040400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x804020, 0x0, 0x808080, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x804000, 0x808000, 0xff0000, 0xfe0000, 0xfc0000, 0xf80000, 0xf00000, 0xe00000, 0xc00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40800000, 0x80800000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2040800000, 0x0, 0x8080800000, 0x0, 0x0, 0x0, 0x0, 0x102040800000, 0x0, 0x0, 0x808080800000, 0x0, 0x0, 0x0, 0x8102040800000, 0x0, 0x0, 0x0, 0x80808080800000, 0x0, 0x0, 0x408102040800000, 0x0, 0x0, 0x0, 0x0, 0x8080808080800000, 0x1010101, 0x0, 0x0, 0x1020408, 0x0, 0x0, 0x0, 0x0, 0x1010100, 0x0, 0x1020400, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010000, 0x1020000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3000000, 0x7000000, 0xf000000, 0x1f000000, 0x3f000000, 0x7f000000, 0xff000000, 0x101000000, 0x201000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10101000000, 0x0, 0x40201000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010101000000, 0x0, 0x0, 0x8040201000000, 0x0, 0x0, 0x0, 0x0, 0x101010101000000, 0x0, 0x0, 0x0, 0x1008040201000000, 0x0, 0x0, 0x0, 0x0, 0x2020202, 0x0, 0x0, 0x2040810, 0x0, 0x0, 0x0, 0x0, 0x2020200, 0x0, 0x2040800, 0x0, 0x0, 0x0, 0x0, 0x2010000, 0x2020000, 0x2040000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3000000, 0x0, 0x6000000, 0xe000000, 0x1e000000, 0x3e000000, 0x7e000000, 0xfe000000, 0x102000000, 0x202000000, 0x402000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20202000000, 0x0, 0x80402000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020202000000, 0x0, 0x0, 0x10080402000000, 0x0, 0x0, 0x0, 0x0, 0x202020202000000, 0x0, 0x0, 0x0, 0x2010080402000000, 0x0, 0x0, 0x0, 0x0, 0x4040404, 0x0, 0x0, 0x4081020, 0x0, 0x0, 0x4020100, 0x0, 0x4040400, 0x0, 0x4081000, 0x0, 0x0, 0x0, 0x0, 0x4020000, 0x4040000, 0x4080000, 0x0, 0x0, 0x0, 0x0, 0x7000000, 0x6000000, 0x0, 0xc000000, 0x1c000000, 0x3c000000, 0x7c000000, 0xfc000000, 0x0, 0x204000000, 0x404000000, 0x804000000, 0x0, 0x0, 0x0, 0x0, 0x10204000000, 0x0, 0x40404000000, 0x0, 0x100804000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404000000, 0x0, 0x0, 0x20100804000000, 0x0, 0x0, 0x0, 0x0, 0x404040404000000, 0x0, 0x0, 0x0, 0x4020100804000000, 0x0, 0x8040201, 0x0, 0x0, 0x8080808, 0x0, 0x0, 0x8102040, 0x0, 0x0, 0x8040200, 0x0, 0x8080800, 0x0, 0x8102000, 0x0, 0x0, 0x0, 0x0, 0x8040000, 0x8080000, 0x8100000, 0x0, 0x0, 0x0, 0xf000000, 0xe000000, 0xc000000, 0x0, 0x18000000, 0x38000000, 0x78000000, 0xf8000000, 0x0, 0x0, 0x408000000, 0x808000000, 0x1008000000, 0x0, 0x0, 0x0, 0x0, 0x20408000000, 0x0, 0x80808000000, 0x0, 0x201008000000, 0x0, 0x0, 0x1020408000000, 0x0, 0x0, 0x8080808000000, 0x0, 0x0, 0x40201008000000, 0x0, 0x0, 0x0, 0x0, 0x808080808000000, 0x0, 0x0, 0x0, 0x8040201008000000, 0x0, 0x10080402, 0x0, 0x0, 0x10101010, 0x0, 0x0, 0x10204080, 0x0, 0x0, 0x10080400, 0x0, 0x10101000, 0x0, 0x10204000, 0x0, 0x0, 0x0, 0x0, 0x10080000, 0x10100000, 0x10200000, 0x0, 0x0, 0x1f000000, 0x1e000000, 0x1c000000, 0x18000000, 0x0, 0x30000000, 0x70000000, 0xf0000000, 0x0, 0x0, 0x0, 0x810000000, 0x1010000000, 0x2010000000, 0x0, 0x0, 0x0, 0x0, 0x40810000000, 0x0, 0x101010000000, 0x0, 0x402010000000, 0x0, 0x0, 0x2040810000000, 0x0, 0x0, 0x10101010000000, 0x0, 0x0, 0x80402010000000, 0x102040810000000, 0x0, 0x0, 0x0, 0x1010101010000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20100804, 0x0, 0x0, 0x20202020, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20100800, 0x0, 0x20202000, 0x0, 0x20408000, 0x0, 0x0, 0x0, 0x0, 0x20100000, 0x20200000, 0x20400000, 0x0, 0x3f000000, 0x3e000000, 0x3c000000, 0x38000000, 0x30000000, 0x0, 0x60000000, 0xe0000000, 0x0, 0x0, 0x0, 0x0, 0x1020000000, 0x2020000000, 0x4020000000, 0x0, 0x0, 0x0, 0x0, 0x81020000000, 0x0, 0x202020000000, 0x0, 0x804020000000, 0x0, 0x0, 0x4081020000000, 0x0, 0x0, 0x20202020000000, 0x0, 0x0, 0x0, 0x204081020000000, 0x0, 0x0, 0x0, 0x2020202020000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40201008, 0x0, 0x0, 0x40404040, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40201000, 0x0, 0x40404000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40200000, 0x40400000, 0x40800000, 0x7f000000, 0x7e000000, 0x7c000000, 0x78000000, 0x70000000, 0x60000000, 0x0, 0xc0000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2040000000, 0x4040000000, 0x8040000000, 0x0, 0x0, 0x0, 0x0, 0x102040000000, 0x0, 0x404040000000, 0x0, 0x0, 0x0, 0x0, 0x8102040000000, 0x0, 0x0, 0x40404040000000, 0x0, 0x0, 0x0, 0x408102040000000, 0x0, 0x0, 0x0, 0x4040404040000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80402010, 0x0, 0x0, 0x80808080, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80402000, 0x0, 0x80808000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80400000, 0x80800000, 0xff000000, 0xfe000000, 0xfc000000, 0xf8000000, 0xf0000000, 0xe0000000, 0xc0000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4080000000, 0x8080000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x204080000000, 0x0, 0x808080000000, 0x0, 0x0, 0x0, 0x0, 0x10204080000000, 0x0, 0x0, 0x80808080000000, 0x0, 0x0, 0x0, 0x810204080000000, 0x0, 0x0, 0x0, 0x8080808080000000, 0x101010101, 0x0, 0x0, 0x0, 0x102040810, 0x0, 0x0, 0x0, 0x101010100, 0x0, 0x0, 0x102040800, 0x0, 0x0, 0x0, 0x0, 0x101010000, 0x0, 0x102040000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101000000, 0x102000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x300000000, 0x700000000, 0xf00000000, 0x1f00000000, 0x3f00000000, 0x7f00000000, 0xff00000000, 0x10100000000, 0x20100000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010100000000, 0x0, 0x4020100000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101010100000000, 0x0, 0x0, 0x804020100000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x202020202, 0x0, 0x0, 0x0, 0x204081020, 0x0, 0x0, 0x0, 0x202020200, 0x0, 0x0, 0x204081000, 0x0, 0x0, 0x0, 0x0, 0x202020000, 0x0, 0x204080000, 0x0, 0x0, 0x0, 0x0, 0x201000000, 0x202000000, 0x204000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x300000000, 0x0, 0x600000000, 0xe00000000, 0x1e00000000, 0x3e00000000, 0x7e00000000, 0xfe00000000, 0x10200000000, 0x20200000000, 0x40200000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020200000000, 0x0, 0x8040200000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x202020200000000, 0x0, 0x0, 0x1008040200000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x404040404, 0x0, 0x0, 0x0, 0x408102040, 0x0, 0x0, 0x0, 0x404040400, 0x0, 0x0, 0x408102000, 0x0, 0x0, 0x402010000, 0x0, 0x404040000, 0x0, 0x408100000, 0x0, 0x0, 0x0, 0x0, 0x402000000, 0x404000000, 0x408000000, 0x0, 0x0, 0x0, 0x0, 0x700000000, 0x600000000, 0x0, 0xc00000000, 0x1c00000000, 0x3c00000000, 0x7c00000000, 0xfc00000000, 0x0, 0x20400000000, 0x40400000000, 0x80400000000, 0x0, 0x0, 0x0, 0x0, 0x1020400000000, 0x0, 0x4040400000000, 0x0, 0x10080400000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x404040400000000, 0x0, 0x0, 0x2010080400000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x808080808, 0x0, 0x0, 0x0, 0x810204080, 0x804020100, 0x0, 0x0, 0x808080800, 0x0, 0x0, 0x810204000, 0x0, 0x0, 0x804020000, 0x0, 0x808080000, 0x0, 0x810200000, 0x0, 0x0, 0x0, 0x0, 0x804000000, 0x808000000, 0x810000000, 0x0, 0x0, 0x0, 0xf00000000, 0xe00000000, 0xc00000000, 0x0, 0x1800000000, 0x3800000000, 0x7800000000, 0xf800000000, 0x0, 0x0, 0x40800000000, 0x80800000000, 0x100800000000, 0x0, 0x0, 0x0, 0x0, 0x2040800000000, 0x0, 0x8080800000000, 0x0, 0x20100800000000, 0x0, 0x0, 0x102040800000000, 0x0, 0x0, 0x808080800000000, 0x0, 0x0, 0x4020100800000000, 0x0, 0x1008040201, 0x0, 0x0, 0x0, 0x1010101010, 0x0, 0x0, 0x0, 0x0, 0x1008040200, 0x0, 0x0, 0x1010101000, 0x0, 0x0, 0x1020408000, 0x0, 0x0, 0x1008040000, 0x0, 0x1010100000, 0x0, 0x1020400000, 0x0, 0x0, 0x0, 0x0, 0x1008000000, 0x1010000000, 0x1020000000, 0x0, 0x0, 0x1f00000000, 0x1e00000000, 0x1c00000000, 0x1800000000, 0x0, 0x3000000000, 0x7000000000, 0xf000000000, 0x0, 0x0, 0x0, 0x81000000000, 0x101000000000, 0x201000000000, 0x0, 0x0, 0x0, 0x0, 0x4081000000000, 0x0, 0x10101000000000, 0x0, 0x40201000000000, 0x0, 0x0, 0x204081000000000, 0x0, 0x0, 0x1010101000000000, 0x0, 0x0, 0x8040201000000000, 0x0, 0x2010080402, 0x0, 0x0, 0x0, 0x2020202020, 0x0, 0x0, 0x0, 0x0, 0x2010080400, 0x0, 0x0, 0x2020202000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2010080000, 0x0, 0x2020200000, 0x0, 0x2040800000, 0x0, 0x0, 0x0, 0x0, 0x2010000000, 0x2020000000, 0x2040000000, 0x0, 0x3f00000000, 0x3e00000000, 0x3c00000000, 0x3800000000, 0x3000000000, 0x0, 0x6000000000, 0xe000000000, 0x0, 0x0, 0x0, 0x0, 0x102000000000, 0x202000000000, 0x402000000000, 0x0, 0x0, 0x0, 0x0, 0x8102000000000, 0x0, 0x20202000000000, 0x0, 0x80402000000000, 0x0, 0x0, 0x408102000000000, 0x0, 0x0, 0x2020202000000000, 0x0, 0x0, 0x0, 0x0, 0x4020100804, 0x0, 0x0, 0x0, 0x4040404040, 0x0, 0x0, 0x0, 0x0, 0x4020100800, 0x0, 0x0, 0x4040404000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4020100000, 0x0, 0x4040400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4020000000, 0x4040000000, 0x4080000000, 0x7f00000000, 0x7e00000000, 0x7c00000000, 0x7800000000, 0x7000000000, 0x6000000000, 0x0, 0xc000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x204000000000, 0x404000000000, 0x804000000000, 0x0, 0x0, 0x0, 0x0, 0x10204000000000, 0x0, 0x40404000000000, 0x0, 0x0, 0x0, 0x0, 0x810204000000000, 0x0, 0x0, 0x4040404000000000, 0x0, 0x0, 0x0, 0x0, 0x8040201008, 0x0, 0x0, 0x0, 0x8080808080, 0x0, 0x0, 0x0, 0x0, 0x8040201000, 0x0, 0x0, 0x8080808000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8040200000, 0x0, 0x8080800000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8040000000, 0x8080000000, 0xff00000000, 0xfe00000000, 0xfc00000000, 0xf800000000, 0xf000000000, 0xe000000000, 0xc000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x408000000000, 0x808000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20408000000000, 0x0, 0x80808000000000, 0x0, 0x0, 0x0, 0x0, 0x1020408000000000, 0x0, 0x0, 0x8080808000000000, 0x10101010101, 0x0, 0x0, 0x0, 0x0, 0x10204081020, 0x0, 0x0, 0x10101010100, 0x0, 0x0, 0x0, 0x10204081000, 0x0, 0x0, 0x0, 0x10101010000, 0x0, 0x0, 0x10204080000, 0x0, 0x0, 0x0, 0x0, 0x10101000000, 0x0, 0x10204000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10100000000, 0x10200000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30000000000, 0x70000000000, 0xf0000000000, 0x1f0000000000, 0x3f0000000000, 0x7f0000000000, 0xff0000000000, 0x1010000000000, 0x2010000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101010000000000, 0x0, 0x402010000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20202020202, 0x0, 0x0, 0x0, 0x0, 0x20408102040, 0x0, 0x0, 0x20202020200, 0x0, 0x0, 0x0, 0x20408102000, 0x0, 0x0, 0x0, 0x20202020000, 0x0, 0x0, 0x20408100000, 0x0, 0x0, 0x0, 0x0, 0x20202000000, 0x0, 0x20408000000, 0x0, 0x0, 0x0, 0x0, 0x20100000000, 0x20200000000, 0x20400000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30000000000, 0x0, 0x60000000000, 0xe0000000000, 0x1e0000000000, 0x3e0000000000, 0x7e0000000000, 0xfe0000000000, 0x1020000000000, 0x2020000000000, 0x4020000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x202020000000000, 0x0, 0x804020000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40404040404, 0x0, 0x0, 0x0, 0x0, 0x40810204080, 0x0, 0x0, 0x40404040400, 0x0, 0x0, 0x0, 0x40810204000, 0x0, 0x0, 0x0, 0x40404040000, 0x0, 0x0, 0x40810200000, 0x0, 0x0, 0x40201000000, 0x0, 0x40404000000, 0x0, 0x40810000000, 0x0, 0x0, 0x0, 0x0, 0x40200000000, 0x40400000000, 0x40800000000, 0x0, 0x0, 0x0, 0x0, 0x70000000000, 0x60000000000, 0x0, 0xc0000000000, 0x1c0000000000, 0x3c0000000000, 0x7c0000000000, 0xfc0000000000, 0x0, 0x2040000000000, 0x4040000000000, 0x8040000000000, 0x0, 0x0, 0x0, 0x0, 0x102040000000000, 0x0, 0x404040000000000, 0x0, 0x1008040000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80808080808, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80808080800, 0x0, 0x0, 0x0, 0x81020408000, 0x80402010000, 0x0, 0x0, 0x80808080000, 0x0, 0x0, 0x81020400000, 0x0, 0x0, 0x80402000000, 0x0, 0x80808000000, 0x0, 0x81020000000, 0x0, 0x0, 0x0, 0x0, 0x80400000000, 0x80800000000, 0x81000000000, 0x0, 0x0, 0x0, 0xf0000000000, 0xe0000000000, 0xc0000000000, 0x0, 0x180000000000, 0x380000000000, 0x780000000000, 0xf80000000000, 0x0, 0x0, 0x4080000000000, 0x8080000000000, 0x10080000000000, 0x0, 0x0, 0x0, 0x0, 0x204080000000000, 0x0, 0x808080000000000, 0x0, 0x2010080000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101010101010, 0x0, 0x0, 0x0, 0x100804020100, 0x0, 0x0, 0x0, 0x101010101000, 0x0, 0x0, 0x0, 0x0, 0x100804020000, 0x0, 0x0, 0x101010100000, 0x0, 0x0, 0x102040800000, 0x0, 0x0, 0x100804000000, 0x0, 0x101010000000, 0x0, 0x102040000000, 0x0, 0x0, 0x0, 0x0, 0x100800000000, 0x101000000000, 0x102000000000, 0x0, 0x0, 0x1f0000000000, 0x1e0000000000, 0x1c0000000000, 0x180000000000, 0x0, 0x300000000000, 0x700000000000, 0xf00000000000, 0x0, 0x0, 0x0, 0x8100000000000, 0x10100000000000, 0x20100000000000, 0x0, 0x0, 0x0, 0x0, 0x408100000000000, 0x0, 0x1010100000000000, 0x0, 0x4020100000000000, 0x0, 0x201008040201, 0x0, 0x0, 0x0, 0x0, 0x202020202020, 0x0, 0x0, 0x0, 0x201008040200, 0x0, 0x0, 0x0, 0x202020202000, 0x0, 0x0, 0x0, 0x0, 0x201008040000, 0x0, 0x0, 0x202020200000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x201008000000, 0x0, 0x202020000000, 0x0, 0x204080000000, 0x0, 0x0, 0x0, 0x0, 0x201000000000, 0x202000000000, 0x204000000000, 0x0, 0x3f0000000000, 0x3e0000000000, 0x3c0000000000, 0x380000000000, 0x300000000000, 0x0, 0x600000000000, 0xe00000000000, 0x0, 0x0, 0x0, 0x0, 0x10200000000000, 0x20200000000000, 0x40200000000000, 0x0, 0x0, 0x0, 0x0, 0x810200000000000, 0x0, 0x2020200000000000, 0x0, 0x8040200000000000, 0x0, 0x402010080402, 0x0, 0x0, 0x0, 0x0, 0x404040404040, 0x0, 0x0, 0x0, 0x402010080400, 0x0, 0x0, 0x0, 0x404040404000, 0x0, 0x0, 0x0, 0x0, 0x402010080000, 0x0, 0x0, 0x404040400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x402010000000, 0x0, 0x404040000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x402000000000, 0x404000000000, 0x408000000000, 0x7f0000000000, 0x7e0000000000, 0x7c0000000000, 0x780000000000, 0x700000000000, 0x600000000000, 0x0, 0xc00000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20400000000000, 0x40400000000000, 0x80400000000000, 0x0, 0x0, 0x0, 0x0, 0x1020400000000000, 0x0, 0x4040400000000000, 0x0, 0x0, 0x0, 0x804020100804, 0x0, 0x0, 0x0, 0x0, 0x808080808080, 0x0, 0x0, 0x0, 0x804020100800, 0x0, 0x0, 0x0, 0x808080808000, 0x0, 0x0, 0x0, 0x0, 0x804020100000, 0x0, 0x0, 0x808080800000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x804020000000, 0x0, 0x808080000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x804000000000, 0x808000000000, 0xff0000000000, 0xfe0000000000, 0xfc0000000000, 0xf80000000000, 0xf00000000000, 0xe00000000000, 0xc00000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40800000000000, 0x80800000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2040800000000000, 0x0, 0x8080800000000000, 0x1010101010101, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1020408102040, 0x0, 0x1010101010100, 0x0, 0x0, 0x0, 0x0, 0x1020408102000, 0x0, 0x0, 0x1010101010000, 0x0, 0x0, 0x0, 0x1020408100000, 0x0, 0x0, 0x0, 0x1010101000000, 0x0, 0x0, 0x1020408000000, 0x0, 0x0, 0x0, 0x0, 0x1010100000000, 0x0, 0x1020400000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010000000000, 0x1020000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3000000000000, 0x7000000000000, 0xf000000000000, 0x1f000000000000, 0x3f000000000000, 0x7f000000000000, 0xff000000000000, 0x101000000000000, 0x201000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020202020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2040810204080, 0x0, 0x2020202020200, 0x0, 0x0, 0x0, 0x0, 0x2040810204000, 0x0, 0x0, 0x2020202020000, 0x0, 0x0, 0x0, 0x2040810200000, 0x0, 0x0, 0x0, 0x2020202000000, 0x0, 0x0, 0x2040810000000, 0x0, 0x0, 0x0, 0x0, 0x2020200000000, 0x0, 0x2040800000000, 0x0, 0x0, 0x0, 0x0, 0x2010000000000, 0x2020000000000, 0x2040000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3000000000000, 0x0, 0x6000000000000, 0xe000000000000, 0x1e000000000000, 0x3e000000000000, 0x7e000000000000, 0xfe000000000000, 0x102000000000000, 0x202000000000000, 0x402000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404040404, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404040400, 0x0, 0x0, 0x0, 0x0, 0x4081020408000, 0x0, 0x0, 0x4040404040000, 0x0, 0x0, 0x0, 0x4081020400000, 0x0, 0x0, 0x0, 0x4040404000000, 0x0, 0x0, 0x4081020000000, 0x0, 0x0, 0x4020100000000, 0x0, 0x4040400000000, 0x0, 0x4081000000000, 0x0, 0x0, 0x0, 0x0, 0x4020000000000, 0x4040000000000, 0x4080000000000, 0x0, 0x0, 0x0, 0x0, 0x7000000000000, 0x6000000000000, 0x0, 0xc000000000000, 0x1c000000000000, 0x3c000000000000, 0x7c000000000000, 0xfc000000000000, 0x0, 0x204000000000000, 0x404000000000000, 0x804000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080808, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080000, 0x0, 0x0, 0x0, 0x8102040800000, 0x8040201000000, 0x0, 0x0, 0x8080808000000, 0x0, 0x0, 0x8102040000000, 0x0, 0x0, 0x8040200000000, 0x0, 0x8080800000000, 0x0, 0x8102000000000, 0x0, 0x0, 0x0, 0x0, 0x8040000000000, 0x8080000000000, 0x8100000000000, 0x0, 0x0, 0x0, 0xf000000000000, 0xe000000000000, 0xc000000000000, 0x0, 0x18000000000000, 0x38000000000000, 0x78000000000000, 0xf8000000000000, 0x0, 0x0, 0x408000000000000, 0x808000000000000, 0x1008000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10101010101010, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10101010101000, 0x0, 0x0, 0x0, 0x10080402010000, 0x0, 0x0, 0x0, 0x10101010100000, 0x0, 0x0, 0x0, 0x0, 0x10080402000000, 0x0, 0x0, 0x10101010000000, 0x0, 0x0, 0x10204080000000, 0x0, 0x0, 0x10080400000000, 0x0, 0x10101000000000, 0x0, 0x10204000000000, 0x0, 0x0, 0x0, 0x0, 0x10080000000000, 0x10100000000000, 0x10200000000000, 0x0, 0x0, 0x1f000000000000, 0x1e000000000000, 0x1c000000000000, 0x18000000000000, 0x0, 0x30000000000000, 0x70000000000000, 0xf0000000000000, 0x0, 0x0, 0x0, 0x810000000000000, 0x1010000000000000, 0x2010000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20202020202020, 0x0, 0x0, 0x20100804020100, 0x0, 0x0, 0x0, 0x0, 0x20202020202000, 0x0, 0x0, 0x0, 0x20100804020000, 0x0, 0x0, 0x0, 0x20202020200000, 0x0, 0x0, 0x0, 0x0, 0x20100804000000, 0x0, 0x0, 0x20202020000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20100800000000, 0x0, 0x20202000000000, 0x0, 0x20408000000000, 0x0, 0x0, 0x0, 0x0, 0x20100000000000, 0x20200000000000, 0x20400000000000, 0x0, 0x3f000000000000, 0x3e000000000000, 0x3c000000000000, 0x38000000000000, 0x30000000000000, 0x0, 0x60000000000000, 0xe0000000000000, 0x0, 0x0, 0x0, 0x0, 0x1020000000000000, 0x2020000000000000, 0x4020000000000000, 0x0, 0x40201008040201, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40404040404040, 0x0, 0x0, 0x40201008040200, 0x0, 0x0, 0x0, 0x0, 0x40404040404000, 0x0, 0x0, 0x0, 0x40201008040000, 0x0, 0x0, 0x0, 0x40404040400000, 0x0, 0x0, 0x0, 0x0, 0x40201008000000, 0x0, 0x0, 0x40404040000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40201000000000, 0x0, 0x40404000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40200000000000, 0x40400000000000, 0x40800000000000, 0x7f000000000000, 0x7e000000000000, 0x7c000000000000, 0x78000000000000, 0x70000000000000, 0x60000000000000, 0x0, 0xc0000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2040000000000000, 0x4040000000000000, 0x8040000000000000, 0x0, 0x80402010080402, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80808080808080, 0x0, 0x0, 0x80402010080400, 0x0, 0x0, 0x0, 0x0, 0x80808080808000, 0x0, 0x0, 0x0, 0x80402010080000, 0x0, 0x0, 0x0, 0x80808080800000, 0x0, 0x0, 0x0, 0x0, 0x80402010000000, 0x0, 0x0, 0x80808080000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80402000000000, 0x0, 0x80808000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80400000000000, 0x80800000000000, 0xff000000000000, 0xfe000000000000, 0xfc000000000000, 0xf8000000000000, 0xf0000000000000, 0xe0000000000000, 0xc0000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4080000000000000, 0x8080000000000000, 0x101010101010101, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x102040810204080, 0x101010101010100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x102040810204000, 0x0, 0x101010101010000, 0x0, 0x0, 0x0, 0x0, 0x102040810200000, 0x0, 0x0, 0x101010101000000, 0x0, 0x0, 0x0, 0x102040810000000, 0x0, 0x0, 0x0, 0x101010100000000, 0x0, 0x0, 0x102040800000000, 0x0, 0x0, 0x0, 0x0, 0x101010000000000, 0x0, 0x102040000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x101000000000000, 0x102000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x300000000000000, 0x700000000000000, 0xf00000000000000, 0x1f00000000000000, 0x3f00000000000000, 0x7f00000000000000, 0xff00000000000000, 0x0, 0x202020202020202, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x202020202020200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x204081020408000, 0x0, 0x202020202020000, 0x0, 0x0, 0x0, 0x0, 0x204081020400000, 0x0, 0x0, 0x202020202000000, 0x0, 0x0, 0x0, 0x204081020000000, 0x0, 0x0, 0x0, 0x202020200000000, 0x0, 0x0, 0x204081000000000, 0x0, 0x0, 0x0, 0x0, 0x202020000000000, 0x0, 0x204080000000000, 0x0, 0x0, 0x0, 0x0, 0x201000000000000, 0x202000000000000, 0x204000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x300000000000000, 0x0, 0x600000000000000, 0xe00000000000000, 0x1e00000000000000, 0x3e00000000000000, 0x7e00000000000000, 0xfe00000000000000, 0x0, 0x0, 0x404040404040404, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x404040404040400, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x404040404040000, 0x0, 0x0, 0x0, 0x0, 0x408102040800000, 0x0, 0x0, 0x404040404000000, 0x0, 0x0, 0x0, 0x408102040000000, 0x0, 0x0, 0x0, 0x404040400000000, 0x0, 0x0, 0x408102000000000, 0x0, 0x0, 0x402010000000000, 0x0, 0x404040000000000, 0x0, 0x408100000000000, 0x0, 0x0, 0x0, 0x0, 0x402000000000000, 0x404000000000000, 0x408000000000000, 0x0, 0x0, 0x0, 0x0, 0x700000000000000, 0x600000000000000, 0x0, 0xc00000000000000, 0x1c00000000000000, 0x3c00000000000000, 0x7c00000000000000, 0xfc00000000000000, 0x0, 0x0, 0x0, 0x808080808080808, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x808080808080800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x808080808080000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x808080808000000, 0x0, 0x0, 0x0, 0x810204080000000, 0x804020100000000, 0x0, 0x0, 0x808080800000000, 0x0, 0x0, 0x810204000000000, 0x0, 0x0, 0x804020000000000, 0x0, 0x808080000000000, 0x0, 0x810200000000000, 0x0, 0x0, 0x0, 0x0, 0x804000000000000, 0x808000000000000, 0x810000000000000, 0x0, 0x0, 0x0, 0xf00000000000000, 0xe00000000000000, 0xc00000000000000, 0x0, 0x1800000000000000, 0x3800000000000000, 0x7800000000000000, 0xf800000000000000, 0x0, 0x0, 0x0, 0x0, 0x1010101010101010, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010101010101000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1010101010100000, 0x0, 0x0, 0x0, 0x1008040201000000, 0x0, 0x0, 0x0, 0x1010101010000000, 0x0, 0x0, 0x0, 0x0, 0x1008040200000000, 0x0, 0x0, 0x1010101000000000, 0x0, 0x0, 0x1020408000000000, 0x0, 0x0, 0x1008040000000000, 0x0, 0x1010100000000000, 0x0, 0x1020400000000000, 0x0, 0x0, 0x0, 0x0, 0x1008000000000000, 0x1010000000000000, 0x1020000000000000, 0x0, 0x0, 0x1f00000000000000, 0x1e00000000000000, 0x1c00000000000000, 0x1800000000000000, 0x0, 0x3000000000000000, 0x7000000000000000, 0xf000000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020202020202020, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2020202020202000, 0x0, 0x0, 0x2010080402010000, 0x0, 0x0, 0x0, 0x0, 0x2020202020200000, 0x0, 0x0, 0x0, 0x2010080402000000, 0x0, 0x0, 0x0, 0x2020202020000000, 0x0, 0x0, 0x0, 0x0, 0x2010080400000000, 0x0, 0x0, 0x2020202000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2010080000000000, 0x0, 0x2020200000000000, 0x0, 0x2040800000000000, 0x0, 0x0, 0x0, 0x0, 0x2010000000000000, 0x2020000000000000, 0x2040000000000000, 0x0, 0x3f00000000000000, 0x3e00000000000000, 0x3c00000000000000, 0x3800000000000000, 0x3000000000000000, 0x0, 0x6000000000000000, 0xe000000000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404040404040, 0x0, 0x4020100804020100, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4040404040404000, 0x0, 0x0, 0x4020100804020000, 0x0, 0x0, 0x0, 0x0, 0x4040404040400000, 0x0, 0x0, 0x0, 0x4020100804000000, 0x0, 0x0, 0x0, 0x4040404040000000, 0x0, 0x0, 0x0, 0x0, 0x4020100800000000, 0x0, 0x0, 0x4040404000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4020100000000000, 0x0, 0x4040400000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4020000000000000, 0x4040000000000000, 0x4080000000000000, 0x7f00000000000000, 0x7e00000000000000, 0x7c00000000000000, 0x7800000000000000, 0x7000000000000000, 0x6000000000000000, 0x0, 0xc000000000000000, 0x8040201008040201, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080808080, 0x0, 0x8040201008040200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8080808080808000, 0x0, 0x0, 0x8040201008040000, 0x0, 0x0, 0x0, 0x0, 0x8080808080800000, 0x0, 0x0, 0x0, 0x8040201008000000, 0x0, 0x0, 0x0, 0x8080808080000000, 0x0, 0x0, 0x0, 0x0, 0x8040201000000000, 0x0, 0x0, 0x8080808000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8040200000000000, 0x0, 0x8080800000000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8040000000000000, 0x8080000000000000, 0xff00000000000000, 0xfe00000000000000, 0xfc00000000000000, 0xf800000000000000, 0xf000000000000000, 0xe000000000000000, 0xc000000000000000, 0x0];

// #[test]
// fn generate_knight_moves() {
//     for index in 0..64 {
//         let mut result = 0u64;
//         let (rank, file) = PositionHelper::rank_and_file_from_index(index);
//
//         for (x, y) in [(1i8, 2i8), (2, 1)] {
//             for multx in [-1, 1] {
//                 for multy in [-1, 1] {
//                     let new_rank = (multx * x) + rank as i8;
//                     let new_file = (multy * y) + file as i8;
//                     if new_rank < 0 || new_rank > 7 || new_file < 0 || new_file > 7 { continue; }
//
//                     result |= 1 << PositionHelper::index_from_rank_and_file(new_rank as u8, new_file as u8);
//                 }
//             }
//         }
//
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index), PositionHelper::algebraic_from_bitboard(result));
//         println!("knight_moves[{}] = 0x{}", index, result);
//         // print!("0x{:x}, ", result);
//     }
// }

// #[test]
// fn generate_king_moves() {
//     for index in 0..64 {
//         let mut result = 0u64;
//         let (rank, file) = PositionHelper::rank_and_file_from_index(index);
//
//         for x in [-1, 0, 1] {
//             for y in [-1, 0, 1] {
//                 if (x, y) == (0, 0) { continue; }
//                 let new_rank = x + rank as i8;
//                 let new_file = y + file as i8;
//                 if new_rank < 0 || new_rank > 7 || new_file < 0 || new_file > 7 { continue; }
//
//                 result |= 1 << PositionHelper::index_from_rank_and_file(new_rank as u8, new_file as u8);
//             }
//         }
//
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index), PositionHelper::algebraic_from_bitboard(result));
//         // println!("king_moves[{}] = 0x{}", index, result);
//         print!("0x{:x}, ", result);
//     }
// }

// #[test]
// fn generate_diagonal_attacks() {
//     let mut diag_results: Vec<u64> = Vec::with_capacity(64);
//     let mut anti_diag_results: Vec<u64> = Vec::with_capacity(64);
//
//     for index in 0..64 {
//         let mut diag_result = 0u64;
//         let mut anti_diag_result = 0u64;
//         let (rank, file) = PositionHelper::rank_and_file_from_index(index);
//
//
//         for x in [1, -1] {
//             for y in [1, -1] {
//                 let mut new_rank: i8 = rank as i8;
//                 let mut new_file: i8 = file as i8;
//
//                 loop {
//                     new_rank += x as i8;
//                     new_file += y as i8;
//                     if new_rank < 0 || new_rank > 7 || new_file < 0 || new_file > 7 { break; }
//
//                     if x == y {
//                         diag_result |= 1 << PositionHelper::index_from_rank_and_file(new_rank as u8, new_file as u8);
//                     } else {
//                         anti_diag_result |= 1 << PositionHelper::index_from_rank_and_file(new_rank as u8, new_file as u8);
//                     }
//                     // result |= 1 << PositionHelper::index_from_rank_and_file(new_rank as u8, new_file as u8);
//                 }
//             }
//         }
//
//         diag_results.push(diag_result);
//         anti_diag_results.push(anti_diag_result);
//
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index), PositionHelper::algebraic_from_bitboard(diag_result));
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index), PositionHelper::algebraic_from_bitboard(anti_diag_result));
//     }
//     for index in 0..64 {
//         print!("0x{:x}, ", diag_results[index]);
//     }
//     println!();
//     for index in 0..64 {
//         print!("0x{:x}, ", anti_diag_results[index]);
//     }
//
//     // for index in 0..64 {
//     //     assert_eq!(DIAGONALS[index] | ANTI_DIAGONALS[index], BISHOP_ATTACKS[index]);
//     // }
// }

// #[test]
// fn generate_single_bit_masks() {
//     for index in 0..64 {
//         let result: u64 = 1 << index;
//
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index), PositionHelper::algebraic_from_bitboard(result));
//         // println!("king_moves[{}] = 0x{}", index, result);
//         print!("0x{:x}, ", result);
//     }
// }

// #[test]
// fn generate_bishop_moves() {
//     for index in 0..64 {
//         let mut result = 0u64;
//         let (rank, file) = PositionHelper::rank_and_file_from_index(index);
//
//         for x in [1, -1] {
//             for y in [1, -1] {
//                 let mut new_rank: i8 = rank as i8;
//                 let mut new_file: i8 = file as i8;
//
//                 loop {
//                     new_rank += x as i8;
//                     new_file += y as i8;
//                     if new_rank < 0 || new_rank > 7 || new_file < 0 || new_file > 7 { break; }
//
//                     result |= 1 << PositionHelper::index_from_rank_and_file(new_rank as u8, new_file as u8);
//                 }
//             }
//         }
//
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index), PositionHelper::algebraic_from_bitboard(result));
//         // println!("king_moves[{}] = 0x{}", index, result);
//         print!("0x{:x}, ", result);
//     }
// }

// #[test]
// fn generate_rook_moves() {
//     for index in 0..64 {
//         let mut result = 0u64;
//         let (rank, file) = PositionHelper::rank_and_file_from_index(index);
//
//         for (x,y) in [(-1, 0), (1, 0), (0, -1), (0, 1)] {
//             let mut new_rank: i8 = rank as i8;
//             let mut new_file: i8 = file as i8;
//
//             loop {
//                 new_rank += x as i8;
//                 new_file += y as i8;
//                 if new_rank < 0 || new_rank > 7 || new_file < 0 || new_file > 7 { break; }
//
//                 result |= 1 << PositionHelper::index_from_rank_and_file(new_rank as u8, new_file as u8);
//             }
//         }
//
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index), PositionHelper::algebraic_from_bitboard(result));
//         // println!("king_moves[{}] = 0x{}", index, result);
//         print!("0x{:x}, ", result);
//     }
// }

// #[test]
// fn generate_queen_moves() {
//     for index in 0..64 {
//         let mut result = BISHOP_MOVES[index] | ROOK_MOVES[index];
//
//         // println!("index {}, moves {:?}", PositionHelper::algebraic_from_index(index as u8), PositionHelper::algebraic_from_bitboard(result));
//         // println!("king_moves[{}] = 0x{}", index, result);
//         print!("0x{:x}, ", result);
//     }
// }

// #[test]
// fn generate_king_attack_rays() {
//     for i1 in 0..64 {
//         let (i1rank, i1file) = PositionHelper::rank_and_file_from_index(i1);
//         let i1bb = SINGLE_BITBOARDS[i1 as usize];
//
//         for i2 in 0..64 {
//             let (i2rank, i2file) = PositionHelper::rank_and_file_from_index(i2);
//             let i2bb = SINGLE_BITBOARDS[i2 as usize];
//
//             let target_index = ((i1 as usize) << 6) + i2 as usize;
//
//             // Sets all bits in between the two indices to 1
//             let partial_bb: u64 = (std::cmp::max(i1bb, i2bb) - std::cmp::min(i1bb, i2bb)) + std::cmp::max(i1bb, i2bb);
//
//             if i1 == i2 {
//                 print!("0x0, ");
//
//             } else if i1rank == i2rank {
//                 print!("0x{:x}, ", RANKS[i1rank as usize] & partial_bb);
//
//             } else if i1file == i2file {
//                 print!("0x{:x}, ", FILES[i1file as usize] & partial_bb);
//
//             } else if (i1rank as i32 - i2rank as i32).abs() == (i1file as i32 - i2file as i32).abs() {
//                 // Positive slope - this is a diagonal
//                 if ((i2rank as i32 - i1rank as i32) / (i2file as i32 - i1file as i32)) > 0 {
//                     print!("0x{:x}, ", DIAGONALS[i2 as usize] & partial_bb);
//                 } else {
//                     print!("0x{:x}, ", ANTI_DIAGONALS[i2 as usize] & partial_bb);
//                 }
//
//             } else {
//                 print!("0x0, ");
//             }
//         }
//     }
// }

// #[test]
// fn generate_vertical_flipped_indices() {
//     for index in 0..64 {
//         let (rank, file) = crate::game::positionhelper::PositionHelper::rank_and_file_from_index(index);
//
//         let new_rank = (7 - ((rank << 1) as i8 - 7)) >> 1;
//         let result = crate::game::positionhelper::PositionHelper::index_from_rank_and_file(new_rank as u8, file);
//
//         print!("{}, ", result);
//     }
// }